<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\oppo_product_test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\oppo_product_test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Tue May 23 10:48:02 2023
<BR><P>
<H3>Maximum Stack Usage =       1320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; system_platform_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[461]">cortex_backtrace_fault_handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[461]">cortex_backtrace_fault_handler</a><BR>
 <LI><a href="#[4a]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">MemManage_Handler</a><BR>
 <LI><a href="#[4b]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">BusFault_Handler</a><BR>
 <LI><a href="#[4c]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">UsageFault_Handler</a><BR>
 <LI><a href="#[48]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">NMI_Handler</a><BR>
 <LI><a href="#[4e]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">DebugMon_Handler</a><BR>
 <LI><a href="#[4f]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[61]">AES_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[6d]">AON_WDT_IRQHandler</a> from maxeye_wdt.o(i.AON_WDT_IRQHandler) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[cf]">BLESLEEP_IRQHandler_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(i.rwip_sleep_func_replace)
 <LI><a href="#[6a]">BLESLP_IRQHandler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[53]">BLE_IRQHandler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[cd]">BLE_IRQHandler_patch</a> from rwble_patch.o(RAM_CODE) referenced from rwble_patch.o(i.rwble_replace)
 <LI><a href="#[52]">BLE_SDK_Handler</a> from rom_symbol.txt(ABSOLUTE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[e3]">BLE_SDK_Handler_patch</a> from system_sdk_patch.o(TINY_RAM_SPACE) referenced from system_sdk_patch.o(i.system_sdk_replace)
 <LI><a href="#[4b]">BusFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[72]">CALENDAR_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[6c]">COMP_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[54]">DMA_IRQHandler</a> from app_dma.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5b]">DUAL_TIMER_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[4e]">DebugMon_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[57]">EXT0_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[58]">EXT1_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[63]">EXT2_IRQHandler</a> from app_gpiote.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[62]">HMAC_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[49]">HardFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5f]">I2C0_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[60]">I2C1_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[6e]">I2S_M_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[6f]">I2S_S_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[70]">ISO7816_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[4a]">MemManage_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[48]">NMI_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[66]">PKC_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[65]">PMU_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[71]">PRESENT_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[69]">PWR_CMD_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[4f]">PendSV_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5c]">QSPI0_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[68]">QSPI1_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[64]">RNG_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[47]">Reset_Handler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[6b]">SLPTIMER_IRQHandler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[55]">SPI_M_IRQHandler</a> from app_spi.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[56]">SPI_S_IRQHandler</a> from app_spi.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[4d]">SVC_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[50]">SysTick_Handler</a> from interrupt_gr55xx.o(i.SysTick_Handler) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[75]">SystemInit</a> from system_gr55xx.o(i.SystemInit) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[59]">TIMER0_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5a]">TIMER1_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5d]">UART0_IRQHandler</a> from app_uart.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[5e]">UART1_IRQHandler</a> from app_uart.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[4c]">UsageFault_Handler</a> from interrupt_gr55xx.o(RAM_CODE) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[51]">WDT_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[67]">XQSPI_IRQHandler</a> from startup_gr55xx.o(.text) referenced from startup_gr55xx.o(RESET)
 <LI><a href="#[78]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[78]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[79]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[44]">app_assert_err_cb</a> from app_assert.o(i.app_assert_err_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[45]">app_assert_param_cb</a> from app_assert.o(i.app_assert_param_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[46]">app_assert_warn_cb</a> from app_assert.o(i.app_assert_warn_cb) referenced 2 times from app_assert.o(.data)
 <LI><a href="#[e6]">app_gap_adv_report_ind_cb</a> from user_gap_callback.o(i.app_gap_adv_report_ind_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[e7]">app_gap_connect_cb</a> from user_gap_callback.o(i.app_gap_connect_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[7c]">app_gap_connect_sch</a> from mble_eniroment.o(i.app_gap_connect_sch) referenced from user_gap_callback.o(i.app_gap_connect_cb)
 <LI><a href="#[e9]">app_gap_connection_update_cb</a> from user_gap_callback.o(i.app_gap_connection_update_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[ea]">app_gap_connection_update_req_cb</a> from user_gap_callback.o(i.app_gap_connection_update_req_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[e8]">app_gap_disconnect_cb</a> from user_gap_callback.o(i.app_gap_disconnect_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[e4]">app_gap_scan_start_cb</a> from user_gap_callback.o(i.app_gap_scan_start_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[e5]">app_gap_scan_stop_cb</a> from user_gap_callback.o(i.app_gap_scan_stop_cb) referenced from user_gap_callback.o(.constdata)
 <LI><a href="#[eb]">app_gatt_mtu_exchange_cb</a> from user_gatt_common_callback.o(i.app_gatt_mtu_exchange_cb) referenced from user_gatt_common_callback.o(.constdata)
 <LI><a href="#[7d]">app_gatt_mtu_exchange_sch</a> from mble_eniroment.o(i.app_gatt_mtu_exchange_sch) referenced from user_gatt_common_callback.o(i.app_gatt_mtu_exchange_cb)
 <LI><a href="#[e1]">app_spi_callback</a> from st7735_config.o(i.app_spi_callback) referenced from st7735_config.o(i.st7735_init)
 <LI><a href="#[7e]">app_test_event_handler</a> from maxeye_product_test.o(i.app_test_event_handler) referenced from maxeye_product_test.o(i.app_test_event_register)
 <LI><a href="#[92]">app_uart_evt_handler</a> from maxeye_uart_cli.o(i.app_uart_evt_handler) referenced from bsp.o(i.bsp_uart_init)
 <LI><a href="#[10c]">atts_execute_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[102]">atts_find_by_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[101]">atts_find_info_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[100]">atts_mtu_exc_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[10b]">atts_prepare_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[106]">atts_read_blob_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[104]">atts_read_by_grp_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[103]">atts_read_by_type_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[107]">atts_read_mult_req_patch</a> from atts_patch.o(i.atts_read_mult_req_patch) referenced from atts_patch.o(.constdata)
 <LI><a href="#[105]">atts_read_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[108]">atts_write_cmd</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[109]">atts_write_req</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[10a]">atts_write_signed</a> from rom_symbol.txt(ABSOLUTE) referenced from atts_patch.o(.constdata)
 <LI><a href="#[d8]">bb_watch_timer_cbk_patch</a> from sch_prog_patch.o(i.bb_watch_timer_cbk_patch) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[d6]">bb_watch_timer_start_patch</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[fe]">ble_bm_set_sec_info_patch</a> from ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[ce]">ble_core_sleep_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(i.rwip_sleep_func_replace)
 <LI><a href="#[0]">ble_init_cmp_callback</a> from user_app.o(i.ble_init_cmp_callback) referenced 2 times from main.o(.data)
 <LI><a href="#[d2]">ble_irq_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[84]">ble_nvds_del</a> from sdk_nvds_patch.o(i.ble_nvds_del) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[82]">ble_nvds_get</a> from rom_symbol.txt(ABSOLUTE) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[81]">ble_nvds_initialized</a> from rom_symbol.txt(ABSOLUTE) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[83]">ble_nvds_put</a> from sdk_nvds_patch.o(i.ble_nvds_put) referenced from sdk_nvds_patch.o(i.ble_nvds_set_entry)
 <LI><a href="#[89]">ble_rwip_wakeup</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[8a]">ble_rwip_wakeup_end</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[4d9]">ble_rwip_wakeup_patch</a> from rwip_sleep_patch.o(RAM_CODE) referenced from rwip_sleep_patch.o(RAM_CODE)
 <LI><a href="#[9d]">ble_sdk_common_timeout_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
 <LI><a href="#[23]">ble_sdk_gatt_mtu_changed_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[21]">ble_sdk_gattc_event_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[22]">ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</a> from ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[d3]">ble_sdk_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[87]">ble_sdk_init_patch</a> from ble_sdk_patch.o(i.ble_sdk_init_patch) referenced from ble_sdk_patch.o(i.ble_sdk_replace)
 <LI><a href="#[d1]">ble_sleep_handler_without_stack_init</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[d0]">ble_sleep_without_stack_init</a> from rwip_sleep_common.o(i.ble_sleep_without_stack_init) referenced from rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
 <LI><a href="#[90]">bsp_uart_flush</a> from bsp.o(i.bsp_uart_flush) referenced from bsp.o(i.bsp_log_init)
 <LI><a href="#[91]">bsp_uart_send</a> from bsp.o(i.bsp_uart_send) referenced from bsp.o(i.bsp_log_init)
 <LI><a href="#[8c]">config_1M_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[8d]">config_2M_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[8e]">config_coded_tx_gain_value</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[c2]">cpll_calibration</a> from platform_sdk.o(i.cpll_calibration) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[7b]">dma_err_callback</a> from app_dma.o(i.dma_err_callback) referenced from app_dma.o(i.app_dma_init)
 <LI><a href="#[ec]">dma_prepare_for_sleep</a> from app_dma.o(i.dma_prepare_for_sleep) referenced from app_dma.o(.constdata)
 <LI><a href="#[ed]">dma_sleep_canceled</a> from app_dma.o(i.dma_sleep_canceled) referenced from app_dma.o(.constdata)
 <LI><a href="#[7a]">dma_tfr_callback</a> from app_dma.o(i.dma_tfr_callback) referenced from app_dma.o(i.app_dma_init)
 <LI><a href="#[ee]">dma_wake_up_ind</a> from app_dma.o(RAM_CODE) referenced from app_dma.o(.constdata)
 <LI><a href="#[94]">firmware_switch_event_handler</a> from maxeye_gpio.o(i.firmware_switch_event_handler) referenced from maxeye_gpio.o(i.firmware_switch_pin_init)
 <LI><a href="#[be]">fpb_patch_enable</a> from fpb_patch_init.o(i.fpb_patch_enable) referenced from platform_gr55xx.o(i.platform_init)
 <LI><a href="#[77]">fputc</a> from app_log.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[8]">gap_activity_stopped_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[1f]">gap_cmp_evt_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[1c]">gap_connection_req_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[9]">gap_dev_bdaddr_ind_handler_patch</a> from ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[85]">gap_device_config_params_init_patch</a> from ble_sdk_gapm_patch.o(i.gap_device_config_params_init_patch) referenced from ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
 <LI><a href="#[1d]">gap_disconnect_ind_handler_patch</a> from ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[86]">gap_init_fsm_next_func_patch</a> from ble_sdk_gapm_patch.o(i.gap_init_fsm_next_func_patch) referenced from ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
 <LI><a href="#[1b]">gapc_hci_handler_patch</a> from gapc_hci_patch.o(i.gapc_hci_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[24]">gapm_activity_create_cmd_handler_patch</a> from gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[95]">gapm_adv_check_param_func_patch</a> from gapm_adv_patch.o(i.gapm_adv_check_param_func_patch) referenced from gapm_adv_patch.o(i.gapm_adv_replace)
 <LI><a href="#[7]">gapm_cmp_evt_handler_patch</a> from ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[25]">gapm_hci_handler_patch</a> from gapm_task_patch.o(i.gapm_hci_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[99]">gapm_init_connection_ind_func_patch</a> from gapm_init_patch.o(i.gapm_init_connection_ind_func_patch) referenced from gapm_init_patch.o(i.gapm_init_replace)
 <LI><a href="#[98]">gapm_init_delete</a> from rom_symbol.txt(ABSOLUTE) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[96]">gapm_init_start_patch</a> from gapm_init_patch.o(i.gapm_init_start_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[97]">gapm_init_stop_patch</a> from gapm_init_patch.o(i.gapm_init_stop_patch) referenced from gapm_init_patch.o(i.gapm_init_create_patch)
 <LI><a href="#[9a]">gatt_on_disconnection_func_patch</a> from ble_sdk_gatts_patch.o(i.gatt_on_disconnection_func_patch) referenced from ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace)
 <LI><a href="#[d9]">gattc_write_req_ind_handler_patch</a> from ble_sdk_prf_patch.o(i.gattc_write_req_ind_handler_patch) referenced from ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace)
 <LI><a href="#[93]">get_info</a> from dfu_cmd_handler_patch.o(i.get_info) referenced from dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
 <LI><a href="#[ef]">gpiote_prepare_for_sleep</a> from app_gpiote.o(i.gpiote_prepare_for_sleep) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[f0]">gpiote_sleep_canceled</a> from app_gpiote.o(i.gpiote_sleep_canceled) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[f1]">gpiote_wake_up_ind</a> from app_gpiote.o(RAM_CODE) referenced from app_gpiote.o(.constdata)
 <LI><a href="#[38]">hal_aon_gpio_callback</a> from app_gpiote.o(i.hal_aon_gpio_callback) referenced 2 times from gr55xx_hal_aon_gpio.o(.data)
 <LI><a href="#[43]">hal_aon_wdt_alarm_callback</a> from maxeye_wdt.o(i.hal_aon_wdt_alarm_callback) referenced 2 times from gr55xx_hal_aon_wdt.o(.data)
 <LI><a href="#[40]">hal_calendar_alarm_callback</a> from main.o(i.hal_calendar_alarm_callback) referenced 2 times from gr55xx_hal_calendar.o(.data)
 <LI><a href="#[42]">hal_calendar_overflow_callback</a> from gr55xx_hal_calendar.o(i.hal_calendar_overflow_callback) referenced 2 times from gr55xx_hal_calendar.o(.data)
 <LI><a href="#[41]">hal_calendar_tick_callback</a> from gr55xx_hal_calendar.o(i.hal_calendar_tick_callback) referenced 2 times from gr55xx_hal_calendar.o(.data)
 <LI><a href="#[fd]">hal_exflash_erase</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[fc]">hal_exflash_write</a> from gr55xx_hal_exflash_patch.o(RAM_CODE) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[37]">hal_gpio_exti_callback</a> from app_gpiote.o(i.hal_gpio_exti_callback) referenced 2 times from gr55xx_hal_gpio.o(.data)
 <LI><a href="#[36]">hal_msp_deinit</a> from gr55xx_hal.o(i.hal_msp_deinit) referenced 2 times from gr55xx_hal.o(.data)
 <LI><a href="#[35]">hal_msp_init</a> from gr55xx_hal.o(i.hal_msp_init) referenced 2 times from gr55xx_hal.o(.data)
 <LI><a href="#[9b]">hal_pwr_sleep_timer_elapsed_callback</a> from app_timer.o(RAM_CODE) referenced from gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup)
 <LI><a href="#[3c]">hal_spi_abort_cplt_callback</a> from gr55xx_hal_spi.o(i.hal_spi_abort_cplt_callback) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[3b]">hal_spi_error_callback</a> from app_spi.o(i.hal_spi_error_callback) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[3a]">hal_spi_msp_deinit</a> from gr55xx_hal_spi.o(i.hal_spi_msp_deinit) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[39]">hal_spi_msp_init</a> from gr55xx_hal_spi.o(i.hal_spi_msp_init) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[3d]">hal_spi_rx_cplt_callback</a> from app_spi.o(i.hal_spi_rx_cplt_callback) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[3e]">hal_spi_tx_cplt_callback</a> from app_spi.o(i.hal_spi_tx_cplt_callback) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[3f]">hal_spi_tx_rx_cplt_callback</a> from app_spi.o(i.hal_spi_tx_rx_cplt_callback) referenced 2 times from gr55xx_hal_spi.o(.data)
 <LI><a href="#[32]">hal_uart_abort_cplt_callback</a> from gr55xx_hal_uart.o(i.hal_uart_abort_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[34]">hal_uart_abort_rx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[33]">hal_uart_abort_tx_cplt_callback</a> from app_uart.o(i.hal_uart_abort_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[31]">hal_uart_error_callback</a> from app_uart.o(i.hal_uart_error_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[2e]">hal_uart_msp_deinit</a> from gr55xx_hal_uart.o(i.hal_uart_msp_deinit) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[2d]">hal_uart_msp_init</a> from gr55xx_hal_uart.o(i.hal_uart_msp_init) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[30]">hal_uart_rx_cplt_callback</a> from app_uart.o(i.hal_uart_rx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[2f]">hal_uart_tx_cplt_callback</a> from app_uart.o(i.hal_uart_tx_cplt_callback) referenced 2 times from gr55xx_hal_uart.o(.data)
 <LI><a href="#[26]">hci_le_add_dev_to_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[28]">hci_le_clear_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2c]">hci_le_cmd_cmp_evt_init_handler_patch</a> from gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[a5]">hci_le_con_upd_cmd_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[a6]">hci_le_con_upd_cmd_handler_patch</a> from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch) referenced from llc_hci_patch.o(i.llc_hci_new_handler_find)
 <LI><a href="#[29]">hci_le_ext_create_con_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[27]">hci_le_rmv_dev_from_wlst_cmd_handler_patch</a> from llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2b]">hci_le_set_ext_scan_en_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[2a]">hci_le_set_ext_scan_param_cmd_handler_patch</a> from llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[1a]">hci_nb_cmp_pkts_evt_handler_patch</a> from l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[fb]">hci_send_2_controller_patch</a> from hci_patch.o(i.hci_send_2_controller_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[c]">host_to_sdk_msg_handler_patch</a> from ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[ff]">ke_task_schedule_patch</a> from ke_task_patch.o(i.ke_task_schedule_patch) referenced from fpb_patch_init.o(.constdata)
 <LI><a href="#[d]">l2cc_pdu_recv_ind_handler_patch</a> from gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[9e]">l2cm_l2cap_tx_handler_patch</a> from l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch) referenced from l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
 <LI><a href="#[db]">listenerOnce_add</a> from listener_once.o(i.listenerOnce_add) referenced from listener_once.o(i.setup_listenerOnce)
 <LI><a href="#[de]">listenerOnce_getCount</a> from listener_once.o(i.listenerOnce_getCount) referenced from listener_once.o(i.setup_listenerOnce)
 <LI><a href="#[dc]">listenerOnce_remove</a> from listener_once.o(i.listenerOnce_remove) referenced from listener_once.o(i.setup_listenerOnce)
 <LI><a href="#[dd]">listenerOnce_removeAll</a> from listener_once.o(i.listenerOnce_removeAll) referenced from listener_once.o(i.setup_listenerOnce)
 <LI><a href="#[df]">listenerOnce_run</a> from listener_once.o(i.listenerOnce_run) referenced from listener_once.o(i.setup_listenerOnce)
 <LI><a href="#[aa]">ll_channel_map_ind_handler_patch</a> from llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[ac]">ll_connection_param_req_handler_patch</a> from llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[ab]">ll_connection_update_ind_handler_patch</a> from llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[ad]">ll_phy_req_handler_patch</a> from llc_phy_upd_patch.o(i.ll_phy_req_handler_patch) referenced from llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
 <LI><a href="#[17]">llc_auth_payl_nearly_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[18]">llc_auth_payl_real_to_handler_patch</a> from llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[9f]">llc_ch_map_up_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch)
 <LI><a href="#[b]">llc_hci_command_handler_patch</a> from llc_hci_patch.o(i.llc_hci_command_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[a8]">llc_ll_enc_rsp_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[a7]">llc_ll_reject_ind_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[a9]">llc_ll_start_enc_rsp_ack_handler</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
 <LI><a href="#[9c]">llc_loc_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
 <LI><a href="#[9c]">llc_loc_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch)
 <LI><a href="#[e]">llc_loc_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[19]">llc_op_dl_upd_ind_handler_patch</a> from llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[a2]">llc_pref_param_compute_func_patch</a> from llc_con_upd_patch.o(i.llc_pref_param_compute_func_patch) referenced from llc_con_upd_patch.o(i.llc_con_upd_replace)
 <LI><a href="#[a3]">llc_rem_con_upd_proc_continue_patch</a> from llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch) referenced from llc_con_upd_patch.o(i.llc_con_upd_replace)
 <LI><a href="#[a0]">llc_rem_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch)
 <LI><a href="#[a0]">llc_rem_con_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch)
 <LI><a href="#[a4]">llc_rem_encrypt_proc_continue_patch</a> from llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch) referenced from llc_encrypt_patch.o(i.llc_encrypt_replace)
 <LI><a href="#[f]">llc_rem_llcp_rsp_to_handler_patch</a> from llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[a1]">llc_rem_phy_upd_proc_err_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from llc_phy_upd_patch.o(i.ll_phy_req_handler_patch)
 <LI><a href="#[12]">lld_acl_rx_ind_handler_patch</a> from llc_task_patch.o(i.lld_acl_rx_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[ae]">lld_adv_frm_cbk_func_patch</a> from lld_adv_patch.o(i.lld_adv_frm_cbk_func_patch) referenced from lld_adv_patch.o(i.lld_adv_replace)
 <LI><a href="#[ba]">lld_adv_start_func_patch</a> from lld_scan_patch.o(i.lld_adv_start_func_patch) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[10f]">lld_bi_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[14]">lld_ch_map_upd_cfm_handler_patch</a> from llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[110]">lld_ci_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[b3]">lld_con_evt_start_cbk_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_start_patch)
 <LI><a href="#[b1]">lld_con_frm_cbk_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[16]">lld_con_offset_upd_ind_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[13]">lld_con_param_upd_cfm_handler_patch</a> from llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[af]">lld_con_sched_patch</a> from lld_con_patch.o(RAM_CODE) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[b0]">lld_con_start_patch</a> from lld_con_patch.o(i.lld_con_start_patch) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[b2]">lld_con_tx_prog_patch</a> from lld_con_patch.o(i.lld_con_tx_prog_patch) referenced from lld_con_patch.o(i.lld_con_replace)
 <LI><a href="#[b5]">lld_init_evt_canceled_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from lld_init_patch.o(i.lld_init_start_patch)
 <LI><a href="#[b6]">lld_init_evt_start_cbk_patch</a> from lld_init_patch.o(RAM_CODE) referenced from lld_init_patch.o(i.lld_init_start_patch)
 <LI><a href="#[b4]">lld_init_patch</a> from lld_patch.o(i.lld_init_patch) referenced from lld_patch.o(i.lld_init_replace)
 <LI><a href="#[b7]">lld_init_start_patch</a> from lld_init_patch.o(i.lld_init_start_patch) referenced from lld_init_patch.o(i.lld_init_start_replace)
 <LI><a href="#[10]">lld_llcp_rx_ind_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[11]">lld_llcp_tx_cfm_handler_patch</a> from llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[15]">lld_phy_upd_cfm_handler_patch</a> from llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[bb]">lld_scan_evt_start_cbk_patch</a> from lld_scan_patch.o(RAM_CODE) referenced from lld_scan_patch.o(i.lld_scan_start_func_patch)
 <LI><a href="#[b8]">lld_scan_frm_cbk_func_patch</a> from lld_scan_patch.o(RAM_CODE) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[b9]">lld_scan_start_func_patch</a> from lld_scan_patch.o(i.lld_scan_start_func_patch) referenced from lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
 <LI><a href="#[111]">lld_supervision_to_cb</a> from rom_symbol.txt(ABSOLUTE) referenced from lld_con_patch.o(RAM_CODE)
 <LI><a href="#[10e]">lld_test_frm_cbk</a> from rom_symbol.txt(ABSOLUTE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[a]">llm_hci_command_handler_patch</a> from llm_hci_patch.o(i.llm_hci_command_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[10d]">lp_cali_watch_alarm_cb</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(RAM_CODE)
 <LI><a href="#[73]">main</a> from platform_gr55xx.o(i.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[76]">main_init</a> from system_gr55xx.o(i.main_init) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[2]">maxeye_c_att_ntf_ind_cb</a> from maxeye_srv_c.o(i.maxeye_c_att_ntf_ind_cb) referenced 2 times from maxeye_srv_c.o(.data)
 <LI><a href="#[1]">maxeye_c_att_write_cb</a> from maxeye_srv_c.o(i.maxeye_c_att_write_cb) referenced 2 times from maxeye_srv_c.o(.data)
 <LI><a href="#[7f]">maxeye_c_evt_process</a> from user_app.o(i.maxeye_c_evt_process) referenced from user_app.o(i.ble_init_cmp_callback)
 <LI><a href="#[3]">maxeye_c_srvc_browse_cb</a> from maxeye_srv_c.o(i.maxeye_c_srvc_browse_cb) referenced 2 times from maxeye_srv_c.o(.data)
 <LI><a href="#[bc]">maxeye_key_int_callback</a> from maxeye_io_it.o(i.maxeye_key_int_callback) referenced from maxeye_io_it.o(i.maxeye_key_int_cfg)
 <LI><a href="#[c7]">maxeye_time1s_event_handler</a> from maxeye_uart.o(i.maxeye_time1s_event_handler) referenced from maxeye_uart.o(i.qfy_maxeye_time1s_event_register)
 <LI><a href="#[bd]">maxeye_wdt_event_handler</a> from maxeye_wdt.o(i.maxeye_wdt_event_handler) referenced from maxeye_wdt.o(i.maxeye_wdt_event_register)
 <LI><a href="#[5]">pencil_c_att_ntf_ind_cb</a> from pencil_srv_c.o(i.pencil_c_att_ntf_ind_cb) referenced 2 times from pencil_srv_c.o(.data)
 <LI><a href="#[4]">pencil_c_att_write_cb</a> from pencil_srv_c.o(i.pencil_c_att_write_cb) referenced 2 times from pencil_srv_c.o(.data)
 <LI><a href="#[80]">pencil_c_evt_process</a> from user_app.o(i.pencil_c_evt_process) referenced from user_app.o(i.ble_init_cmp_callback)
 <LI><a href="#[6]">pencil_c_srvc_browse_cb</a> from pencil_srv_c.o(i.pencil_c_srvc_browse_cb) referenced 2 times from pencil_srv_c.o(.data)
 <LI><a href="#[e2]">pmu_calibration</a> from pmu_calibration.o(i.pmu_calibration) referenced from pmu_calibration.o(i.system_pmu_calibration_init)
 <LI><a href="#[c3]">production_test_evt_handler</a> from maxeye_uart.o(i.production_test_evt_handler) referenced from maxeye_uart.o(i.production_test_init)
 <LI><a href="#[c6]">pwr_enter_sleep_check</a> from app_pwr_mgmt.o(i.pwr_enter_sleep_check) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[c4]">pwr_mgmt_shutdown_patch</a> from sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE) referenced from sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
 <LI><a href="#[c5]">pwr_wake_up_ind</a> from app_pwr_mgmt.o(RAM_CODE) referenced from app_pwr_mgmt.o(i.pwr_register_sleep_cb)
 <LI><a href="#[c8]">rf_init_patch</a> from rf_gdx_patch.o(i.rf_init_patch) referenced from rf_gdx_patch.o(i.rf_gdx_replace)
 <LI><a href="#[8f]">rf_recalibrate</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[cb]">rf_txpwr_cs_get_patch</a> from rf_gdx_patch.o(i.rf_txpwr_cs_get_patch) referenced from rf_gdx_patch.o(i.rf_init_patch)
 <LI><a href="#[ca]">rf_txpwr_dbm_get_patch</a> from rf_gdx_patch.o(i.rf_txpwr_dbm_get_patch) referenced from rf_gdx_patch.o(i.rf_init_patch)
 <LI><a href="#[c9]">rf_wakeup_init_patch</a> from rf_gdx_patch.o(RAM_CODE) referenced from rf_gdx_patch.o(i.rf_gdx_replace)
 <LI><a href="#[cc]">rom_callback_patch</a> from rwip_sleep_common.o(RAM_CODE) referenced from rwip_sleep_common.o(i.rom_callback_replace)
 <LI><a href="#[88]">rwip_us_2_lpcycles</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[d5]">sch_arb_event_start_isr_patch</a> from sch_arb_patch.o(RAM_CODE) referenced from sch_arb_patch.o(i.sch_arb_replace)
 <LI><a href="#[d4]">sch_arb_insert_patch</a> from sch_arb_patch.o(RAM_CODE) referenced from sch_arb_patch.o(i.sch_arb_replace)
 <LI><a href="#[d7]">sch_prog_activity_isr_patch</a> from sch_prog_patch.o(RAM_CODE) referenced from sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
 <LI><a href="#[20]">sec_rcv_encrypt_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[1e]">sec_rcv_sec_req_ind_handler_patch</a> from ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch) referenced 2 times from platform_gr55xx.o(.data)
 <LI><a href="#[da]">second_boot_event_handler</a> from maxeye_product_test.o(i.second_boot_event_handler) referenced from maxeye_product_test.o(i.second_boot_event_register)
 <LI><a href="#[74]">set_msp</a> from system_gr55xx.o(i.set_msp) referenced from startup_gr55xx.o(.text)
 <LI><a href="#[8b]">set_sdk_schedule_event</a> from rom_symbol.txt(ABSOLUTE) referenced from system_sdk_patch.o(i.ble_stack_init)
 <LI><a href="#[e0]">smpc_handle_enc_change_evt_func_patch</a> from smpc_patch.o(i.smpc_handle_enc_change_evt_func_patch) referenced from smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace)
 <LI><a href="#[f8]">spi_prepare_for_sleep</a> from app_spi.o(i.spi_prepare_for_sleep) referenced from app_spi.o(.constdata)
 <LI><a href="#[f9]">spi_sleep_canceled</a> from app_spi.o(i.spi_sleep_canceled) referenced from app_spi.o(.constdata)
 <LI><a href="#[fa]">spi_wake_up_ind</a> from app_spi.o(RAM_CODE) referenced from app_spi.o(.constdata)
 <LI><a href="#[c0]">sys_context_restore_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[bf]">sys_context_save_func</a> from platform_sys_context.o(RAM_CODE) referenced from platform_sdk.o(i.platform_sdk_init)
 <LI><a href="#[f5]">systick_prepare_for_sleep</a> from app_systick.o(i.systick_prepare_for_sleep) referenced from app_systick.o(.constdata)
 <LI><a href="#[f6]">systick_sleep_canceled</a> from app_systick.o(i.systick_sleep_canceled) referenced from app_systick.o(.constdata)
 <LI><a href="#[f7]">systick_wake_up_ind</a> from app_systick.o(RAM_CODE) referenced from app_systick.o(.constdata)
 <LI><a href="#[f2]">uart_prepare_for_sleep</a> from app_uart.o(i.uart_prepare_for_sleep) referenced from app_uart.o(.constdata)
 <LI><a href="#[f3]">uart_sleep_canceled</a> from app_uart.o(i.uart_sleep_canceled) referenced from app_uart.o(.constdata)
 <LI><a href="#[f4]">uart_wake_up_ind</a> from app_uart.o(RAM_CODE) referenced from app_uart.o(.constdata)
 <LI><a href="#[c1]">ultra_wfi</a> from rom_symbol.txt(ABSOLUTE) referenced from platform_sdk.o(i.platform_sdk_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[41d]"></a>bl1_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen (via Veneer)
</UL>

<P><STRONG><a name="[136]"></a>assert_err</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_prog_patch (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_start_cbk_patch
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func_patch (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func_patch (via Veneer)
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init (via Veneer)
</UL>

<P><STRONG><a name="[329]"></a>assert_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch (via Veneer)
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch (via Veneer)
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[33d]"></a>assert_warn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[34c]"></a>attc_l2cc_pdu_recv_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[1e7]"></a>attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[1e8]"></a>attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len (via Veneer)
</UL>

<P><STRONG><a name="[1f3]"></a>atts_clear_read_cache</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[10c]"></a>atts_execute_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>atts_find_by_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>atts_find_info_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[1f0]"></a>atts_get_att_chk_perm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[1f1]"></a>atts_get_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[1ea]"></a>atts_hdl_value_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[100]"></a>atts_mtu_exc_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>atts_prepare_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[1ed]"></a>atts_process_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[106]"></a>atts_read_blob_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>atts_read_by_grp_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>atts_read_by_type_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>atts_read_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[1f6]"></a>atts_send_error</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[1f5]"></a>atts_send_pdu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[108]"></a>atts_write_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>atts_write_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>atts_write_signed</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[4ac]"></a>ble_get_role_and_cs_idx_from_et</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[33c]"></a>ble_util_buf_acl_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ae]"></a>ble_util_buf_adv_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_try_to_free_old_buffer (via Veneer)
</UL>

<P><STRONG><a name="[38d]"></a>ble_util_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[326]"></a>co_bdaddr_compare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch (via Veneer)
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[3ac]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff (via Veneer)
</UL>

<P><STRONG><a name="[3ab]"></a>co_list_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff (via Veneer)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
</UL>

<P><STRONG><a name="[348]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[1ec]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[1ee]"></a>co_list_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[14b]"></a>dbg_log_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch (via Veneer)
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch (via Veneer)
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch (via Veneer)
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch (via Veneer)
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch (via Veneer)
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch (via Veneer)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch (via Veneer)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list (via Veneer)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch (via Veneer)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items (via Veneer)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_param_func_patch (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch (via Veneer)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch (via Veneer)
</UL>

<P><STRONG><a name="[47e]"></a>exflash_check_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[49b]"></a>exflash_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[495]"></a>exflash_enable_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
</UL>

<P><STRONG><a name="[4c9]"></a>exflash_erase_chip</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[4ca]"></a>exflash_erase_sector</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>

<P><STRONG><a name="[4c8]"></a>exflash_page_program</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[4ce]"></a>exflash_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[4cd]"></a>exflash_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[493]"></a>exflash_wait_busy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[47c]"></a>exflash_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[498]"></a>exflash_write_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
</UL>

<P><STRONG><a name="[4f0]"></a>force_dpad_le_high</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
</UL>

<P><STRONG><a name="[32c]"></a>gapc_get_conidx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch (via Veneer)
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[449]"></a>gapc_get_dest_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[32d]"></a>gapc_get_operation</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[44a]"></a>gapc_link_encrypted</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[448]"></a>gapc_send_complete_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c0]"></a>gapc_set_local_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[447]"></a>gapc_update_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c7]"></a>gapm_actv_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b4]"></a>gapm_actv_check_create_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c9]"></a>gapm_actv_created</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b5]"></a>gapm_actv_get_free_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[31e]"></a>gapm_actv_retrieve_cmd_cmp_evt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[342]"></a>gapm_actv_started</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b6]"></a>gapm_adv_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2bf]"></a>gapm_get_address_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[2ba]"></a>gapm_get_att_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c8]"></a>gapm_get_requester</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[2ca]"></a>gapm_init_check_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch (via Veneer)
</UL>

<P><STRONG><a name="[98]"></a>gapm_init_delete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[2cc]"></a>gapm_init_send_hci_le_create_con_cancel_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c4]"></a>gapm_init_send_hci_le_ext_create_con_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c5]"></a>gapm_init_stopped</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch (via Veneer)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2c6]"></a>gapm_is_addr_type_valid</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b8]"></a>gapm_per_sync_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b3]"></a>gapm_process_op</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[2b7]"></a>gapm_scan_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[1ef]"></a>gattc_get_mtu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch (via Veneer)
</UL>

<P><STRONG><a name="[2ef]"></a>hal_aon_gpio_br_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler (via Veneer)
</UL>

<P><STRONG><a name="[2ea]"></a>hal_aon_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init (via Veneer)
</UL>

<P><STRONG><a name="[134]"></a>hal_aon_wdt_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AON_WDT_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[2f1]"></a>hal_aon_wdt_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init (via Veneer)
</UL>

<P><STRONG><a name="[2f6]"></a>hal_calendar_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init
</UL>

<P><STRONG><a name="[27e]"></a>hal_dma_get_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_prepare_for_sleep
</UL>

<P><STRONG><a name="[467]"></a>hal_dma_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>

<P><STRONG><a name="[466]"></a>hal_dma_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
</UL>

<P><STRONG><a name="[27f]"></a>hal_dma_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_prepare_for_sleep
</UL>

<P><STRONG><a name="[453]"></a>hal_efuse_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[300]"></a>hal_exflash_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>

<P><STRONG><a name="[465]"></a>hal_exflash_read_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>

<P><STRONG><a name="[47b]"></a>hal_exflash_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
</UL>

<P><STRONG><a name="[303]"></a>hal_gpio_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>

<P><STRONG><a name="[468]"></a>hal_gpio_exti_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT1_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT0_IRQHandler
</UL>

<P><STRONG><a name="[304]"></a>hal_gpio_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
</UL>

<P><STRONG><a name="[302]"></a>hal_gpio_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
</UL>

<P><STRONG><a name="[17c]"></a>hal_gpio_write_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_event_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_set
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[306]"></a>hal_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[17e]"></a>hal_msio_write_pin</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[169]"></a>hal_nvic_clear_pending_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wake_up_ind
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[16a]"></a>hal_nvic_enable_irq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpiote_wake_up_ind
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_wake_up_ind
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wake_up_ind
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[309]"></a>hal_pwr_config_timer_wakeup_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>

<P><STRONG><a name="[508]"></a>hal_pwr_enter_chip_deepsleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[308]"></a>hal_pwr_register_timer_elaspsed_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>

<P><STRONG><a name="[462]"></a>hal_pwr_sleep_timer_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLPTIMER_IRQHandler
</UL>

<P><STRONG><a name="[305]"></a>hal_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>

<P><STRONG><a name="[310]"></a>hal_spi_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit
</UL>

<P><STRONG><a name="[44d]"></a>hal_spi_get_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_prepare_for_sleep
</UL>

<P><STRONG><a name="[311]"></a>hal_spi_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
</UL>

<P><STRONG><a name="[46c]"></a>hal_spi_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_M_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_S_IRQHandler
</UL>

<P><STRONG><a name="[30f]"></a>hal_spi_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit
</UL>

<P><STRONG><a name="[46b]"></a>hal_spi_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wake_up_ind
</UL>

<P><STRONG><a name="[44e]"></a>hal_spi_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_prepare_for_sleep
</UL>

<P><STRONG><a name="[1a0]"></a>hal_spi_transmit_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
</UL>

<P><STRONG><a name="[1d3]"></a>hal_uart_abort_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[315]"></a>hal_uart_deinit_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>

<P><STRONG><a name="[316]"></a>hal_uart_init_ext</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
</UL>

<P><STRONG><a name="[46a]"></a>hal_uart_irq_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[1dc]"></a>hal_uart_receive_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
</UL>

<P><STRONG><a name="[1db]"></a>hal_uart_receive_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
</UL>

<P><STRONG><a name="[314]"></a>hal_uart_register_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
</UL>

<P><STRONG><a name="[469]"></a>hal_uart_resume_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wake_up_ind
</UL>

<P><STRONG><a name="[458]"></a>hal_uart_suspend_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep
</UL>

<P><STRONG><a name="[1d4]"></a>hal_uart_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[1de]"></a>hal_uart_transmit_dma</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[1dd]"></a>hal_uart_transmit_it</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[490]"></a>hal_xqspi_command_receive</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>

<P><STRONG><a name="[470]"></a>hal_xqspi_msp_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[471]"></a>hal_xqspi_set_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[492]"></a>hal_xqspi_transmit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[320]"></a>init_hci_le_cmd_cmp_evt_started_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[321]"></a>init_hci_le_cmd_cmp_evt_stopping_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[a5]"></a>hci_le_con_upd_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[33b]"></a>hci_look_for_cmd_desc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
</UL>

<P><STRONG><a name="[480]"></a>jump_app</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[34f]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
</UL>

<P><STRONG><a name="[34b]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[33a]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[4b7]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[349]"></a>ke_is_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[1f2]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[2c1]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[32a]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[2c2]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[1eb]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch
</UL>

<P><STRONG><a name="[34a]"></a>ke_task_handler_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[2c3]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop_patch
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind_func_patch
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>

<P><STRONG><a name="[2cb]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
</UL>

<P><STRONG><a name="[34d]"></a>l2cc_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[1f4]"></a>l2cc_pdu_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch
</UL>

<P><STRONG><a name="[338]"></a>l2cm_get_nb_buffer_available</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
</UL>

<P><STRONG><a name="[2fc]"></a>ll_dma_struct_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[30b]"></a>ll_rng_deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_deinit_ext
</UL>

<P><STRONG><a name="[30d]"></a>ll_rng_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
</UL>

<P><STRONG><a name="[368]"></a>llc_auth_payl_nearly_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler_patch
</UL>

<P><STRONG><a name="[369]"></a>llc_auth_payl_real_to_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler_patch
</UL>

<P><STRONG><a name="[9f]"></a>llc_ch_map_up_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch)
</UL>
<P><STRONG><a name="[324]"></a>llc_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
</UL>

<P><STRONG><a name="[322]"></a>llc_con_upd_param_in_range</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
</UL>

<P><STRONG><a name="[36d]"></a>llc_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[37a]"></a>llc_hci_con_param_req_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[37c]"></a>llc_hci_con_upd_info_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[38b]"></a>llc_hci_enc_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[386]"></a>llc_hci_ltk_request_evt_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[383]"></a>llc_iv_skd_rand_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[38c]"></a>llc_le_ping_restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[37b]"></a>llc_ll_connection_param_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[a8]"></a>llc_ll_enc_rsp_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[385]"></a>llc_ll_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[382]"></a>llc_ll_pause_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[a7]"></a>llc_ll_reject_ind_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[379]"></a>llc_ll_reject_ind_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[389]"></a>llc_ll_start_enc_req_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[a9]"></a>llc_ll_start_enc_rsp_ack_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch)
</UL>
<P><STRONG><a name="[38a]"></a>llc_ll_start_enc_rsp_pdu_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[381]"></a>llc_llcp_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[9c]"></a>llc_loc_con_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 2]<UL><LI> llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch)
<LI> llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch)
</UL>
<P><STRONG><a name="[36e]"></a>llc_op_dl_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler_patch
</UL>

<P><STRONG><a name="[360]"></a>llc_proc_collision_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
</UL>

<P><STRONG><a name="[361]"></a>llc_proc_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[35b]"></a>llc_proc_id_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
</UL>

<P><STRONG><a name="[35d]"></a>llc_proc_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
</UL>

<P><STRONG><a name="[362]"></a>llc_proc_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[323]"></a>llc_proc_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_upd_cmd_handler_patch
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[37f]"></a>llc_proc_timer_pause_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[377]"></a>llc_proc_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[37d]"></a>llc_proc_unreg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[35e]"></a>llc_rem_ch_map_proc_continue_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
</UL>

<P><STRONG><a name="[a0]"></a>llc_rem_con_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 2]<UL><LI> llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch)
<LI> llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch)
</UL>
<P><STRONG><a name="[a1]"></a>llc_rem_phy_upd_proc_err_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> llc_phy_upd_patch.o(i.ll_phy_req_handler_patch)
</UL>
<P><STRONG><a name="[387]"></a>llc_sk_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[3a4]"></a>lld_aa_gen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[38e]"></a>lld_acl_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[325]"></a>lld_addr_is_in_ral_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[397]"></a>lld_adv_adv_data_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[39b]"></a>lld_adv_aux_ch_idx_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[394]"></a>lld_adv_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[39a]"></a>lld_adv_ext_chain_construct</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[390]"></a>lld_adv_frm_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[395]"></a>lld_adv_pkt_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[398]"></a>lld_adv_scan_rsp_data_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[39c]"></a>lld_adv_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func_patch
</UL>

<P><STRONG><a name="[10f]"></a>lld_bi_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[4b5]"></a>lld_calc_aux_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[39d]"></a>lld_ch_map_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[110]"></a>lld_ci_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[372]"></a>lld_con_activity_offset_compute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[4c1]"></a>lld_con_cleanup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_end_cleanup
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[4c0]"></a>lld_con_clear_ccmcnt_rx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[4bf]"></a>lld_con_clear_ccmcnt_tx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[37e]"></a>lld_con_data_flow_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>

<P><STRONG><a name="[388]"></a>lld_con_enc_key_load</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[4c2]"></a>lld_con_frm_cbk_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_frm_cbk_patch
</UL>

<P><STRONG><a name="[4bd]"></a>lld_con_max_lat_calc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[36f]"></a>lld_con_offset_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[39e]"></a>lld_con_offset_upd_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
</UL>

<P><STRONG><a name="[39f]"></a>lld_con_param_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[378]"></a>lld_con_param_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[380]"></a>lld_con_rx_enc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[3a0]"></a>lld_con_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_start_patch
</UL>

<P><STRONG><a name="[384]"></a>lld_con_tx_enc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[376]"></a>lld_con_tx_len_update_for_intv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
</UL>

<P><STRONG><a name="[500]"></a>lld_init_compute_winoffset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[3a5]"></a>lld_init_connect_req_pack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[b5]"></a>lld_init_evt_canceled_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_patch)
</UL>
<P><STRONG><a name="[3a2]"></a>lld_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_patch
</UL>

<P><STRONG><a name="[4c3]"></a>lld_instant_proc_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[4ff]"></a>lld_iso_hop_accel_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[3a8]"></a>lld_llcp_rx_ind_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[3a9]"></a>lld_llcp_tx_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
</UL>

<P><STRONG><a name="[3aa]"></a>lld_phy_upd_cfm_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
</UL>

<P><STRONG><a name="[3a6]"></a>lld_ral_search</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[3a3]"></a>lld_read_clock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[334]"></a>lld_res_list_is_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[393]"></a>lld_rxdesc_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[392]"></a>lld_rxdesc_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[4ba]"></a>lld_scan_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
</UL>

<P><STRONG><a name="[4b1]"></a>lld_scan_evt_start_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[4bc]"></a>lld_scan_frm_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[4b3]"></a>lld_scan_get_adv_data_len</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[333]"></a>lld_scan_params_update</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[3ad]"></a>lld_scan_start_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func_patch
</UL>

<P><STRONG><a name="[332]"></a>lld_scan_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[4b4]"></a>lld_scan_sync_accept</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[4b6]"></a>lld_scan_sync_info_unpack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>

<P><STRONG><a name="[4bb]"></a>lld_scan_trunc_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
</UL>

<P><STRONG><a name="[111]"></a>lld_supervision_to_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[10e]"></a>lld_test_frm_cbk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[31b]"></a>lld_white_list_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[31d]"></a>lld_white_list_rem</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[327]"></a>llm_activity_free_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[31c]"></a>llm_cmd_cmp_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[32b]"></a>llm_cmd_stat_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
</UL>

<P><STRONG><a name="[319]"></a>llm_dev_list_empty_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[318]"></a>llm_dev_list_search</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[31a]"></a>llm_is_dev_connected</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[335]"></a>llm_is_wl_empty</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[35f]"></a>llm_le_evt_mask_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[336]"></a>llm_scan_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[337]"></a>llm_update_dbg_act_state_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_en_cmd_handler_patch
</UL>

<P><STRONG><a name="[4f8]"></a>prevent_sleep_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[256]"></a>register_config_1M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[257]"></a>register_config_2M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[258]"></a>register_config_coded_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[252]"></a>register_rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[253]"></a>register_rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[254]"></a>register_rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[4be]"></a>rwip_active_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
</UL>

<P><STRONG><a name="[4fc]"></a>rwip_crypt_isr_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4fd]"></a>rwip_sw_int_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[43f]"></a>rwip_sw_int_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[1f7]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>

<P><STRONG><a name="[4fb]"></a>rwip_timer_10ms_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4f7]"></a>rwip_timer_hs_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4f6]"></a>rwip_timer_hus_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4fa]"></a>rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4f9]"></a>rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>

<P><STRONG><a name="[4a4]"></a>sch_alarm_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[1f8]"></a>sch_alarm_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_sched_patch
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
</UL>

<P><STRONG><a name="[4f1]"></a>sch_arb_allow_activity_notify</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[4f4]"></a>sch_arb_insert_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert_patch
</UL>

<P><STRONG><a name="[4f3]"></a>sch_arb_prog_timer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[391]"></a>sch_arb_remove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[370]"></a>sch_plan_chk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[328]"></a>sch_plan_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[4ad]"></a>sch_prog_convert_cs_idx_to_handle</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4ab]"></a>sch_prog_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4a7]"></a>sch_prog_rx_iso_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4a6]"></a>sch_prog_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4a9]"></a>sch_prog_skip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4a8]"></a>sch_prog_tx_iso_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4a5]"></a>sch_prog_tx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[501]"></a>sch_slice_bg_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_evt_start_cbk_patch
</UL>

<P><STRONG><a name="[330]"></a>smpc_generate_stk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[32e]"></a>smpc_secure_connections_enabled</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[32f]"></a>smpc_send_ltk_req_rsp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[331]"></a>smpc_send_pairing_ind</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>

<P><STRONG><a name="[44c]"></a>smpc_tkdp_rcp_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[44b]"></a>smpc_tkdp_send_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
</UL>

<P><STRONG><a name="[242]"></a>svc_get_nvds_api_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[245]"></a>svc_rwip_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[244]"></a>svc_set_heaps_table_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[255]"></a>sys_signal_handler_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[477]"></a>xqspi_send_inst_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
</UL>

<P><STRONG><a name="[472]"></a>xqspi_wait_flag_state_until_retry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[48e]"></a>pwr_mgmt_load_context</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[50e]"></a>pwr_mgmt_save_ctx_lvl_two</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[41e]"></a>sdk_srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[6a]"></a>BLESLP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>BLE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>BLE_SDK_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[460]"></a>SVC_handler_proc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>

<P><STRONG><a name="[2d4]"></a>ble_attmdb_get_attribute</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2d5]"></a>ble_attmdb_uuid16_comp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[343]"></a>ble_bm_get_bond_devs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
</UL>

<P><STRONG><a name="[2ce]"></a>ble_bm_get_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[29c]"></a>ble_bm_get_ral_dev_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[344]"></a>ble_bm_get_sec_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
</UL>

<P><STRONG><a name="[2bc]"></a>ble_bm_get_sec_info_by_peer_irk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[23d]"></a>ble_bm_set_gatt_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[3c1]"></a>ble_client_prf_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_client_init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_client_init
</UL>

<P><STRONG><a name="[4e5]"></a>ble_env_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[229]"></a>ble_gap_addr_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[24e]"></a>ble_gap_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[16d]"></a>ble_gap_conn_param_update_reply</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connection_update_req_cb
</UL>

<P><STRONG><a name="[160]"></a>ble_gap_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[2b1]"></a>ble_gap_l2cap_params_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[2b0]"></a>ble_gap_scan_param_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
</UL>

<P><STRONG><a name="[161]"></a>ble_gap_scan_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
</UL>

<P><STRONG><a name="[153]"></a>ble_gap_scan_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
</UL>

<P><STRONG><a name="[442]"></a>ble_gapc_auth_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[29b]"></a>ble_gapc_role_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[250]"></a>ble_gatt_common_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[251]"></a>ble_gattc_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[220]"></a>ble_gattc_indicate_cfm_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[221]"></a>ble_gattc_mtu_exchange_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
</UL>

<P><STRONG><a name="[223]"></a>ble_gattc_prf_services_browse_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_services_browse
</UL>

<P><STRONG><a name="[225]"></a>ble_gattc_prf_write_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write
</UL>

<P><STRONG><a name="[227]"></a>ble_gattc_prf_write_no_resp_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write_no_resp
</UL>

<P><STRONG><a name="[23a]"></a>ble_gattm_svc_start_hdl_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
</UL>

<P><STRONG><a name="[24d]"></a>ble_init_cmp_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[2a2]"></a>ble_ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[21b]"></a>ble_ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[441]"></a>ble_ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[443]"></a>ble_ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[82]"></a>ble_nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[81]"></a>ble_nvds_initialized</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[2d6]"></a>ble_prf_get_id_from_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[259]"></a>ble_rf_calibration_func_cb_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[24c]"></a>ble_rom_prf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[89]"></a>ble_rwip_wakeup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[8a]"></a>ble_rwip_wakeup_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[25a]"></a>ble_schedule_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[9d]"></a>ble_sdk_common_timeout_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch)
</UL>
<P><STRONG><a name="[4dd]"></a>ble_sdk_core_reinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[23e]"></a>ble_sdk_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_patch
</UL>

<P><STRONG><a name="[241]"></a>ble_sdk_rf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[4dc]"></a>ble_sdk_rf_wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[502]"></a>ble_sdk_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
</UL>

<P><STRONG><a name="[24f]"></a>ble_sec_callback_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[8c]"></a>config_1M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[8d]"></a>config_2M_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[8e]"></a>config_coded_tx_gain_value</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[2d8]"></a>dfu_send_frame</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_info
</UL>

<P><STRONG><a name="[27d]"></a>dfu_set_cmd_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
</UL>

<P><STRONG><a name="[1fe]"></a>find_peer_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[1ff]"></a>find_unused_bond_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[404]"></a>fpb_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[21d]"></a>fpb_load_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[3f8]"></a>fpb_register_patch_init_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[21a]"></a>fpb_save_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[2ab]"></a>gap_activity_opera_end</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[21c]"></a>gap_activity_opera_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
</UL>

<P><STRONG><a name="[299]"></a>gap_cache_data_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[29a]"></a>gap_cache_data_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[2a1]"></a>gap_cache_data_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[2aa]"></a>gap_create_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[2ac]"></a>gap_delete_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[2a0]"></a>gap_get_actv_type_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
</UL>

<P><STRONG><a name="[297]"></a>gap_get_adv_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[298]"></a>gap_get_per_sync_idx_by_actv_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_bdaddr_ind_handler_patch
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_stopped_ind_handler_patch
</UL>

<P><STRONG><a name="[29f]"></a>gap_reslv_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2ad]"></a>gap_start_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[2ae]"></a>gap_stop_initiating</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[2bb]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[23b]"></a>gatt_add_bond_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2d1]"></a>gatt_clear_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[2a8]"></a>gatt_on_disconnection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[2d0]"></a>gatt_recovery_cccd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[2cd]"></a>gattc_on_connection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
</UL>

<P><STRONG><a name="[2d2]"></a>gattc_on_disconnection</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[1e3]"></a>get_align_bytes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[2af]"></a>get_conn_idx_by_hdl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_init_fsm_next_func_patch
</UL>

<P><STRONG><a name="[33e]"></a>get_msg_handler_func</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
</UL>

<P><STRONG><a name="[4e1]"></a>get_rf_api</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[454]"></a>hal_efuse_deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[455]"></a>hal_efuse_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>

<P><STRONG><a name="[3de]"></a>hal_flash_sector_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[279]"></a>hal_flash_set_security</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>

<P><STRONG><a name="[201]"></a>nvds_del</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_del
</UL>

<P><STRONG><a name="[435]"></a>nvds_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
</UL>

<P><STRONG><a name="[3dd]"></a>nvds_get_start_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[3dc]"></a>nvds_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
</UL>

<P><STRONG><a name="[2d3]"></a>prf_get_prf_cb_by_task_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[41a]"></a>pwr_mgmt_dev_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[48d]"></a>pwr_mgmt_dev_resume</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[510]"></a>pwr_mgmt_dev_suspend</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[2e7]"></a>pwr_mgmt_get_wakeup_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_callback
</UL>

<P><STRONG><a name="[406]"></a>pwr_mgmt_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[50b]"></a>pwr_mgmt_locker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[424]"></a>pwr_mgmt_mode_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
</UL>

<P><STRONG><a name="[191]"></a>pwr_mgmt_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[1c7]"></a>pwr_mgmt_notify_timer_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[41b]"></a>pwr_mgmt_set_callback</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
</UL>

<P><STRONG><a name="[506]"></a>pwr_mgmt_set_wakeup_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[50f]"></a>pwr_mgmt_unlocker</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[13a]"></a>pwr_mgmt_update_wkup_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
</UL>

<P><STRONG><a name="[174]"></a>pwr_mgmt_wakeup_source_setup</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[422]"></a>rf_SX_Enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
</UL>

<P><STRONG><a name="[431]"></a>rf_SX_Tune</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
</UL>

<P><STRONG><a name="[423]"></a>rf_SX_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
</UL>

<P><STRONG><a name="[42d]"></a>rf_agc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[429]"></a>rf_api_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[42a]"></a>rf_em_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[427]"></a>rf_freq_table_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
</UL>

<P><STRONG><a name="[275]"></a>rf_get_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[433]"></a>rf_mat_cir_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[42c]"></a>rf_misc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[8f]"></a>rf_recalibrate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[407]"></a>rf_recalibration_handler_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[26f]"></a>rf_set_recalibration_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[42e]"></a>rf_trim_calibration</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[432]"></a>rf_tx_mode_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[4ef]"></a>rf_wakeup_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[4d1]"></a>rwip_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[4ed]"></a>rwip_prevent_sleep_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
</UL>

<P><STRONG><a name="[88]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[511]"></a>save_context_and_enter_sleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[4db]"></a>sdk_blecore_postsleep_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[4e2]"></a>sdk_blecore_presleep_task</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[2a5]"></a>sec_build_rand16</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[2a9]"></a>sec_clear_bond_info_env</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[445]"></a>sec_enc_link</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[238]"></a>sec_get_bond_dev_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
</UL>

<P><STRONG><a name="[29d]"></a>sec_on_conn_complete</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2a7]"></a>sec_on_disconn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_ind_handler_patch
</UL>

<P><STRONG><a name="[444]"></a>sec_send_pair_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[2bd]"></a>sec_update_bond_info</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[8b]"></a>set_sdk_schedule_event</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[3f7]"></a>svc_table_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[15e]"></a>sys_assert_cb_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
</UL>

<P><STRONG><a name="[219]"></a>sys_ble_heartbeat_period_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>

<P><STRONG><a name="[148]"></a>sys_delay_us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
</UL>

<P><STRONG><a name="[4de]"></a>sys_ke_sleep_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_is_in_active_state
</UL>

<P><STRONG><a name="[1c9]"></a>sys_lpclk_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
</UL>

<P><STRONG><a name="[402]"></a>sys_lpclk_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
</UL>

<P><STRONG><a name="[504]"></a>sys_lpcycles_2_hus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[4da]"></a>sys_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[4c6]"></a>sys_security_data_use_present</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[2ff]"></a>sys_security_enable_status_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[4e0]"></a>sys_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
</UL>

<P><STRONG><a name="[4e6]"></a>sys_sleep_env_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[1c5]"></a>sys_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[c1]"></a>ultra_wfi</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[200]"></a>update_lru_bond_list</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[4d]"></a>SVC_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_handler_proc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>HardFault_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[461]"></a>cortex_backtrace_fault_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cortex_backtrace_fault_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[4a]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SLPTIMER_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupt_gr55xx.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[463]"></a>hal_xqspi_init_ext</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[301]"></a>hal_exflash_read</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_exflash.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read_rom
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>

<P><STRONG><a name="[54]"></a>DMA_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_dma.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXT0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>EXT1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_exti_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>EXT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXT2_IRQHandler &rArr; hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[c5]"></a>pwr_wake_up_ind</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_pwr_mgmt.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_wake_up_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[5d]"></a>UART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPI_S_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_spi.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SPI_M_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_spi.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>hal_pwr_sleep_timer_elapsed_callback</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, app_timer.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = hal_pwr_sleep_timer_elapsed_callback &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup)
</UL>
<P><STRONG><a name="[46d]"></a>app_timer_stop_and_ret</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, app_timer.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>

<P><STRONG><a name="[1a4]"></a>app_timer_start</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, app_timer.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_start
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_start
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_start
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[46e]"></a>hal_pwr_disable_ext_wakeup</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>

<P><STRONG><a name="[173]"></a>hal_pwr_config_ext_wakeup</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_ext_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>

<P><STRONG><a name="[1c8]"></a>hal_pwr_get_timer_current_value</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_get_timer_current_value
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[512]"></a>hal_xqspi_set_xip_present_status_patch</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)

<P><STRONG><a name="[464]"></a>hal_xqspi_init_ext_patch</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_set_retry
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_msp_init
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[476]"></a>hal_xqspi_command_receive_patch</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[478]"></a>hal_xqspi_command_receive_align_word</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_send_inst_addr
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
</UL>

<P><STRONG><a name="[47a]"></a>hal_exflash_warm_init</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_set_retry
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[47f]"></a>warm_boot_patch</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, warm_boot_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_app
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_patch
</UL>

<P><STRONG><a name="[482]"></a>xo_offset_slowly_set</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>

<P><STRONG><a name="[483]"></a>boot_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[436]"></a>work_xo_bias_set</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xo_offset_slowly_set
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
</UL>

<P><STRONG><a name="[485]"></a>sys_is_adjust_boot_digldo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
</UL>

<P><STRONG><a name="[484]"></a>boot_digldo_dcdc_set</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = boot_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_save_func
</UL>

<P><STRONG><a name="[486]"></a>work_digldo_dcdc_set</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_adjust_boot_digldo
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_context_restore_func
</UL>

<P><STRONG><a name="[48c]"></a>hal_pm_resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[487]"></a>warm_boot_second</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>

<P><STRONG><a name="[419]"></a>warm_boot_first</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = warm_boot_first &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[418]"></a>warm_boot</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_resume
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_load_context
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pm_resume
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_restore_func
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_is_enabled_it
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_get_ext_wakeup_status
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
</UL>

<P><STRONG><a name="[22e]"></a>platform_rng2_calibration_is_busy</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
</UL>

<P><STRONG><a name="[48f]"></a>enable_quad_stat</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>

<P><STRONG><a name="[491]"></a>enable_quad_xmc</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = enable_quad_xmc &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[494]"></a>enable_quad_mode2</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode2
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[496]"></a>enable_quad_mode1</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enable_quad_mode1
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_enable_write
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_transmit
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wait_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[497]"></a>enable_quad_mode0</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_write_status
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
</UL>

<P><STRONG><a name="[499]"></a>enable_quad_normal</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode0
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode1
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_mode2
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>

<P><STRONG><a name="[49a]"></a>enable_quad</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_normal
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad_xmc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>

<P><STRONG><a name="[3ee]"></a>platform_exflash_enable_quad</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_exflash.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
</UL>

<P><STRONG><a name="[49c]"></a>platform_interrupt_protection_push</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
</UL>

<P><STRONG><a name="[49e]"></a>platform_interrupt_protection_pop</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_exflash.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
</UL>

<P><STRONG><a name="[4a0]"></a>get_sram_size</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>

<P><STRONG><a name="[4a1]"></a>system_calculate_sram_size</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>

<P><STRONG><a name="[3d7]"></a>mem_pwr_mgmt_work_state_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_work_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[3d8]"></a>mem_pwr_mgmt_sleep_state_set</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_calculate_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs
</UL>

<P><STRONG><a name="[4a2]"></a>mem_pwr_mgmt_check_processs</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, platform_sram.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = mem_pwr_mgmt_check_processs &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
</UL>

<P><STRONG><a name="[10d]"></a>lp_cali_watch_alarm_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[4a3]"></a>lp_cali_watch_alarm_start</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_find
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
</UL>

<P><STRONG><a name="[43d]"></a>ble_rx_desc_rx_done_clean</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_rx_desc_rx_done_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[4aa]"></a>sch_prog_et_idx_correct_patch</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>

<P><STRONG><a name="[d7]"></a>sch_prog_activity_isr_patch</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sch_prog_activity_isr_patch &rArr; sch_arb_event_start_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_tx_isr
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_tx_iso_isr
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_skip_isr
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_isr
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_rx_iso_isr
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_end_isr
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_convert_cs_idx_to_handle
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_get_role_and_cs_idx_from_et
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rx_desc_rx_done_clean
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_et_idx_correct_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[4b0]"></a>lld_test_frm_cbk_replace</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[4ae]"></a>bb_watch_timer_update</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bb_watch_timer_update
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[4af]"></a>bb_watch_timer_is_needed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_start_patch
</UL>

<P><STRONG><a name="[d6]"></a>bb_watch_timer_start_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, sch_prog_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bb_watch_timer_start_patch &rArr; bb_watch_timer_update
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_update
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_is_needed
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_test_frm_cbk_replace
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[af]"></a>lld_con_sched_patch</STRONG> (Thumb, 1216 bytes, Stack size 56 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lld_con_sched_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_active_check
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_max_lat_calc
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_clear_ccmcnt_tx
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_clear_ccmcnt_rx
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_cleanup
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[b1]"></a>lld_con_frm_cbk_patch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lld_con_frm_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_frm_cbk_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[b3]"></a>lld_con_evt_start_cbk_patch</STRONG> (Thumb, 1038 bytes, Stack size 72 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lld_con_evt_start_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_instant_proc_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_start_patch)
</UL>
<P><STRONG><a name="[4f2]"></a>lld_con_is_con_evt_end</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[4c4]"></a>lld_con_evt_end_cleanup</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_con_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_event_start_isr_patch
</UL>

<P><STRONG><a name="[4c5]"></a>ll_cgc_disable_secu_clk</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[4c7]"></a>ll_cgc_enable_secu_clk</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
</UL>

<P><STRONG><a name="[3f0]"></a>hal_exflash_operation_protection</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
</UL>

<P><STRONG><a name="[fc]"></a>hal_exflash_write</STRONG> (Thumb, 532 bytes, Stack size 576 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_page_program
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_data_use_present
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_enable_secu_clk
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_cgc_disable_secu_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>hal_exflash_erase</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_sector
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_erase_chip
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[47d]"></a>exflash_check_id_patch</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = exflash_check_id_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_warm_init
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch
</UL>

<P><STRONG><a name="[4cb]"></a>hal_exflash_deepsleep_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_exflash_deepsleep_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_deepsleep
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[4cc]"></a>hal_exflash_wakeup_patch</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_wakeup
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_check_id_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[49d]"></a>hal_exflash_suspend</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_suspend
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_push
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
</UL>

<P><STRONG><a name="[49f]"></a>hal_exflash_resume</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_exflash_resume &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_resume
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_interrupt_protection_pop
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
</UL>

<P><STRONG><a name="[4cf]"></a>hal_exflash_operation</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gr55xx_hal_exflash_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext
</UL>

<P><STRONG><a name="[473]"></a>ll_xqspi_init_patch</STRONG> (Thumb, 652 bytes, Stack size 16 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_disable_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_init_ext_patch
</UL>

<P><STRONG><a name="[507]"></a>ble_core_power_off</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[4d6]"></a>ble_core_power_on</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_cbk_execute
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[4d3]"></a>rwip_clkn_set</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[247]"></a>ble_sleep_time_record</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[138]"></a>ble_wakup_time_check</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_clkn_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[248]"></a>ble_wait_for_core_sleep_stat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
</UL>

<P><STRONG><a name="[137]"></a>ble_wait_for_core_wakeup_stat</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>

<P><STRONG><a name="[249]"></a>ble_is_in_sleep_state</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[d1]"></a>ble_sleep_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sleep_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_Handler_without_stack_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[d3]"></a>ble_sdk_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_sdk_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_IRQ_Handler_without_stack_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[d2]"></a>ble_irq_handler_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_irq_handler_without_stack_init &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQ_Handler_without_stack_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[481]"></a>rom_cbk_execute</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rom_cbk_execute &rArr; work_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>

<P><STRONG><a name="[cc]"></a>rom_callback_patch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rom_callback_patch &rArr; warm_boot_patch &rArr; hal_exflash_warm_init &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rom_callback_replace)
</UL>
<P><STRONG><a name="[4d7]"></a>get_remain_sleep_dur</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rwip_sleep_common.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_remain_sleep_dur
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer (via Veneer)
</UL>

<P><STRONG><a name="[4d8]"></a>rng2_lp_cali_alarm_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lp_cali_watch_alarm_start
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>

<P><STRONG><a name="[4d9]"></a>ble_rwip_wakeup_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ble_rwip_wakeup_patch &rArr; ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_end
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_wakeup_stat
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLEEP_IRQHandler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(RAM_CODE)
</UL>
<P><STRONG><a name="[cf]"></a>BLESLEEP_IRQHandler_patch</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BLESLEEP_IRQHandler_patch &rArr; hal_exflash_suspend &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_prevent_sleep_set
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_blecore_postsleep_task
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rf_wakeup_init
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_core_reinit
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ke_sleep_check
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rwip_wakeup_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(i.rwip_sleep_func_replace)
</UL>
<P><STRONG><a name="[4df]"></a>ble_sleep_request</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sleep_request
</UL>
<BR>[Calls]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_enter
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_blecore_presleep_task
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rf_api
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_sleep_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
</UL>

<P><STRONG><a name="[4e3]"></a>ble_go_to_deep_sleep</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_go_to_deep_sleep &rArr; ble_sleep_request
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_request
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
</UL>

<P><STRONG><a name="[4e7]"></a>ble_core_sleep_hus_get</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_core_sleep_hus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>

<P><STRONG><a name="[4e4]"></a>rwip_sleep_duration_get</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_env_get
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_env_get
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_hus_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
</UL>

<P><STRONG><a name="[4e8]"></a>ble_peform_sleep_successfully</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ble_peform_sleep_successfully &rArr; rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sleep_env_get
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_lpcycles_2_hus
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_go_to_deep_sleep
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_duration_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[4e9]"></a>rng2_lp_cali_state_get</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rng2_lp_cali_state_get &rArr; rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_ready (via Veneer)
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup (via Veneer)
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_alarm_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
</UL>

<P><STRONG><a name="[4ec]"></a>ble_is_in_prevent_sleep_state</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_is_in_prevent_sleep_state &rArr; rng2_lp_cali_state_get &rArr; rng2_lp_cali_alarm_start &rArr; lp_cali_watch_alarm_start
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_get
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[4ee]"></a>ble_stack_is_in_active_state</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_stack_is_in_active_state
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ke_sleep_check
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_sleep_patch
</UL>

<P><STRONG><a name="[ce]"></a>ble_core_sleep_patch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rwip_sleep_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = ble_core_sleep_patch &rArr; ble_peform_sleep_successfully &rArr; rwip_sleep_duration_get &rArr; ble_core_sleep_hus_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_is_in_active_state
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_prevent_sleep_state
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_peform_sleep_successfully
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_sleep_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_patch.o(i.rwip_sleep_func_replace)
</UL>
<P><STRONG><a name="[430]"></a>rf_perform_enhance</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[42f]"></a>rf_timing_cfg</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init_patch
</UL>

<P><STRONG><a name="[bf]"></a>sys_context_save_func</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_context_save_func &rArr; boot_xo_bias_set &rArr; xo_offset_slowly_set
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_digldo_dcdc_set
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;boot_xo_bias_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[c0]"></a>sys_context_restore_func</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sys_context_restore_func &rArr; work_digldo_dcdc_set
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;force_dpad_le_high
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[48b]"></a>system_priority_restore_func</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, platform_sys_context.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_priority_restore_func
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[d5]"></a>sch_arb_event_start_isr_patch</STRONG> (Thumb, 540 bytes, Stack size 64 bytes, sch_arb_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sch_arb_event_start_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_allow_activity_notify
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_prog_timer
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_convert_cs_idx_to_handle
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_evt_end_cleanup
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_is_con_evt_end
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_activity_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_arb_patch.o(i.sch_arb_replace)
</UL>
<P><STRONG><a name="[d4]"></a>sch_arb_insert_patch</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sch_arb_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_insert_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_arb_patch.o(i.sch_arb_replace)
</UL>
<P><STRONG><a name="[4f5]"></a>rwip_isr_patch</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup_end
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_wakeup
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hus_handler
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_hs_handler
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_timer_10ms_handler
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_handler
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_crypt_isr_handler
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevent_sleep_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[4fe]"></a>rwble_isr_patch</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rwble_isr_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_iso_hop_accel_isr
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_IRQHandler_patch
</UL>

<P><STRONG><a name="[cd]"></a>BLE_IRQHandler_patch</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rwble_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BLE_IRQHandler_patch &rArr; rwble_isr_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_suspend
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_resume
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwble_patch.o(i.rwble_replace)
</UL>
<P><STRONG><a name="[b6]"></a>lld_init_evt_start_cbk_patch</STRONG> (Thumb, 284 bytes, Stack size 72 bytes, lld_init_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lld_init_evt_start_cbk_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_slice_bg_add
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_compute_winoffset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_patch)
</UL>
<P><STRONG><a name="[112]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[513]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry3.o(.ARM.Collect$$$$00000002))

<P><STRONG><a name="[113]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[131]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[514]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[515]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[516]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[517]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[518]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[47]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CALENDAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DUAL_TIMER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[115]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gr55xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>

<P><STRONG><a name="[62]"></a>HMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2S_M_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2S_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>ISO7816_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>PKC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>PMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>PRESENT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>PWR_CMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>QSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>XQSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gr55xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[399]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
</UL>

<P><STRONG><a name="[24b]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[14c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_periheral_hash
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_write_enc_key
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_key
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_evt_put
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_pencil_sn
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_ext_scan_param_cmd_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_write
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start_patch
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req_patch
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_patch
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
</UL>

<P><STRONG><a name="[154]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scan_stop_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_register
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_register
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_con_upd_proc_continue_patch
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llcp_pdu_handler_tab_replace
</UL>

<P><STRONG><a name="[519]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[51a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[51b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_key
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_receive_open
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>

<P><STRONG><a name="[159]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_client_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;listenerOnce_removeAll
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_listenerOnce
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_log
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_uart_rst_voltameter_rsp
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_level_rsp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_cali_rsp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_sleep_rsp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_shipmode_rsp
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_set_mac_rsp
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_rssi_rsp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pcba_test_rsp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_disable_preload_rsp
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_batt_cap_rsp
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_create_con_cmd_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_callback
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_patch
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
</UL>

<P><STRONG><a name="[51c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[415]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[50]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt_gr55xx.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[51d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[51e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[158]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[14a]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_pencil_id_find
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_oneplus_id_find
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_manufacturer_id_find
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_srvc_browse_cb
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_enc_verify
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_srvc_browse_cb
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_a_contain_b
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
</UL>

<P><STRONG><a name="[414]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[11f]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[121]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[122]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[127]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[128]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[12a]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[12b]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[12c]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ul2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
</UL>

<P><STRONG><a name="[4d2]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>

<P><STRONG><a name="[12d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[12f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[51f]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retention_mem_set
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[520]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[118]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[521]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[522]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[123]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[523]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[11d]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[125]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[124]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[130]"></a>_drnd</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, drnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
</UL>

<P><STRONG><a name="[114]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[524]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[525]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[526]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>main</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, platform_gr55xx.o(i.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = main &rArr; system_platform_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6d]"></a>AON_WDT_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_wdt.o(i.AON_WDT_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_irq_handler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>BLESLP_Handler_without_stack_init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.BLESLP_Handler_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BLESLP_Handler_without_stack_init &rArr; ble_wakup_time_check &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_wakeup_stat
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakup_time_check
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_handler_without_stack_init
</UL>

<P><STRONG><a name="[4d5]"></a>BLE_IRQ_Handler_without_stack_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_irq_handler_without_stack_init
</UL>

<P><STRONG><a name="[4d4]"></a>BLE_SDK_IRQ_Handler_without_stack_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.BLE_SDK_IRQ_Handler_without_stack_init))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_handler_without_stack_init
</UL>

<P><STRONG><a name="[277]"></a>SystemCoreGetClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemCoreGetClock))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[139]"></a>SystemCoreSetClock</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_gr55xx.o(i.SystemCoreSetClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreSetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_update_wkup_param
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[30e]"></a>SystemCoreUpdateClock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemCoreUpdateClock))
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wait_flag_state_until_timeout
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
</UL>

<P><STRONG><a name="[75]"></a>SystemInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_gr55xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; sdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[13c]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[527]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[152]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_alarm_callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_run
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_srvc_browse_cb
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_authorize_key
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_char_to_hex
</UL>

<P><STRONG><a name="[528]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[529]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[13e]"></a>__0snprintf</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[52a]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[183]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[52b]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[52c]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[13f]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[52d]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[15b]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[52e]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[52f]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[140]"></a>__0vsnprintf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[530]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[531]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[532]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[184]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_log
</UL>

<P><STRONG><a name="[3c6]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc1.o(i.__free$1region))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_authorize_key
</UL>

<P><STRONG><a name="[3c5]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc1.o(i.__malloc$1region))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_authorize_key
</UL>

<P><STRONG><a name="[533]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[534]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[146]"></a>adc_conversion</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, platform_adc.o(i.adc_conversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = adc_conversion
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_adc_disable_clock
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
</UL>

<P><STRONG><a name="[149]"></a>add_ltk_item</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.add_ltk_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = add_ltk_item &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
</UL>

<P><STRONG><a name="[2ee]"></a>aon_gpio_read_flag_it_patch</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_aon_gpio_patch.o(i.aon_gpio_read_flag_it_patch))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_irq_handler
</UL>

<P><STRONG><a name="[14d]"></a>aon_voltage_set</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, platform_sdk.o(i.aon_voltage_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = aon_voltage_set
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[14f]"></a>app_adv_report_handler</STRONG> (Thumb, 526 bytes, Stack size 88 bytes, user_app.o(i.app_adv_report_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = app_adv_report_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_scan_stop
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_pencil_id_find
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_oneplus_id_find
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_manufacturer_id_find
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_adv_report_ind_cb
</UL>

<P><STRONG><a name="[44]"></a>app_assert_err_cb</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, app_assert.o(i.app_assert_err_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = app_assert_err_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[15d]"></a>app_assert_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_assert.o(i.app_assert_init))
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_assert_cb_register
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[45]"></a>app_assert_param_cb</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, app_assert.o(i.app_assert_param_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = app_assert_param_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>app_assert_warn_cb</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, app_assert.o(i.app_assert_warn_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152<LI>Call Chain = app_assert_warn_cb &rArr; app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_assert.o(.data)
</UL>
<P><STRONG><a name="[15f]"></a>app_connect_by_mac</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, user_app.o(i.app_connect_by_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = app_connect_by_mac &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_scan_start
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[162]"></a>app_connected_handler</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, user_app.o(i.app_connected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_connected_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_connected_cb
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
</UL>

<P><STRONG><a name="[165]"></a>app_disconnected_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, user_app.o(i.app_disconnected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_disconnected_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_disconnect_cb
</UL>

<P><STRONG><a name="[197]"></a>app_dma_get_handle</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_dma.o(i.app_dma_get_handle))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_config_dma
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
</UL>

<P><STRONG><a name="[167]"></a>app_dma_init</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, app_dma.o(i.app_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_config_dma
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
</UL>

<P><STRONG><a name="[155]"></a>app_error_fault_handler</STRONG> (Thumb, 122 bytes, Stack size 536 bytes, app_error.o(i.app_error_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scan_stop_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_register
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_register
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[7c]"></a>app_gap_connect_sch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mble_eniroment.o(i.app_gap_connect_sch))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_gap_connect_sch &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(i.app_gap_connect_cb)
</UL>
<P><STRONG><a name="[7d]"></a>app_gatt_mtu_exchange_sch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, mble_eniroment.o(i.app_gatt_mtu_exchange_sch))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_gatt_mtu_exchange_sch &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gatt_common_callback.o(i.app_gatt_mtu_exchange_cb)
</UL>
<P><STRONG><a name="[170]"></a>app_gpiote_init</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, app_gpiote.o(i.app_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_key_int_cfg
</UL>

<P><STRONG><a name="[171]"></a>app_io_deinit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_io.o(i.app_io_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_deinit &rArr; hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>

<P><STRONG><a name="[172]"></a>app_io_init</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, app_io.o(i.app_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_config
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
</UL>

<P><STRONG><a name="[17b]"></a>app_io_write_pin</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, app_io.o(i.app_io_write_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_write_pin
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_config
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_event_call
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_cmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_buffer
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
</UL>

<P><STRONG><a name="[15c]"></a>app_log_flush</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_log.o(i.app_log_flush))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[17f]"></a>app_log_init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_log.o(i.app_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_log_init
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[151]"></a>app_log_output</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, app_log.o(i.app_log_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_strcpy
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_is_fmt_set
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_client_init
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_notify_set
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_disc_srvc_start
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_client_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_connected_cb
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scan_stop_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_process
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_pencil_id_find
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oppo_oneplus_id_find
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_manufacturer_id_find
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_process
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_alarm_callback
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_enc_verify
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gatt_mtu_exchange_sch
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_sch
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_scan_stop_cb
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_scan_start_cb
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_disconnect_cb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_srvc_browse_cb
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_handler_execute
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_att_write_cb
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_att_ntf_ind_cb
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_event_handler
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_set
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_start
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_start
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_start
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_evt_handler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_time1s_event_handler
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_info_output
</UL>

<P><STRONG><a name="[186]"></a>app_log_raw_info</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, app_log.o(i.app_log_raw_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_process
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[187]"></a>app_malloc</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, app_memory.o(i.app_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = app_malloc &rArr; free_block_node_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_block_node_insert
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mem_init
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_evt_put
</UL>

<P><STRONG><a name="[16f]"></a>app_mtu_exchange_handler</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, user_app.o(i.app_mtu_exchange_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_mtu_exchange_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_disc_srvc_start
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_disc_srvc_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gatt_mtu_exchange_cb
</UL>

<P><STRONG><a name="[18c]"></a>app_periph_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, user_periph_setup.o(i.app_periph_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = app_periph_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_set
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_receive_open
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_key_int_cfg
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[16e]"></a>app_scan_stop_handler</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, user_app.o(i.app_scan_stop_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = app_scan_stop_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_connect
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_scan_stop_cb
</UL>

<P><STRONG><a name="[16c]"></a>app_scheduler_evt_put</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_scheduler.o(i.app_scheduler_evt_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_scheduler_evt_put &rArr; app_malloc &rArr; free_block_node_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_malloc
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next_index_get
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gatt_mtu_exchange_cb
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_connect_cb
</UL>

<P><STRONG><a name="[195]"></a>app_scheduler_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_scheduler.o(i.app_scheduler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = app_scheduler_init &rArr; app_malloc &rArr; free_block_node_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_malloc
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[199]"></a>app_spi_init</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, app_spi.o(i.app_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_spi_init &rArr; app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_gpio_config
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_config_dma
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
</UL>

<P><STRONG><a name="[19e]"></a>app_spi_transmit_async</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, app_spi.o(i.app_spi_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit_it
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit_dma
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_cmd
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_buffer
</UL>

<P><STRONG><a name="[19a]"></a>app_systick_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_systick.o(i.app_systick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>

<P><STRONG><a name="[163]"></a>app_test_connected_cb</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, maxeye_product_test.o(i.app_test_connected_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_test_connected_cb &rArr; app_test_event_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_start
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
</UL>

<P><STRONG><a name="[1bb]"></a>app_test_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_product_test.o(i.app_test_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = app_test_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1a2]"></a>app_test_event_start</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, maxeye_product_test.o(i.app_test_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = app_test_event_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_connected_cb
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[1bc]"></a>app_timer_create</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_set_var
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_get_valid_node
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_register
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_register
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[1c2]"></a>app_timer_delete</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_timer_delete &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
</UL>

<P><STRONG><a name="[1c0]"></a>app_timer_get_valid_node</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_get_valid_node))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[1c1]"></a>app_timer_set_var</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_set_var))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
</UL>

<P><STRONG><a name="[1bd]"></a>app_timer_stop</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_get
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_notify_timer_event
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next_timer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriority
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_event_handler
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_start
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_start
</UL>

<P><STRONG><a name="[92]"></a>app_uart_evt_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, maxeye_uart_cli.o(i.app_uart_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = app_uart_evt_handler &rArr; maxeye_uart_cli_cb &rArr; pencil_msg_evt_handler_t &rArr; production_enc_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_uart_init)
</UL>
<P><STRONG><a name="[1d0]"></a>app_uart_flush</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, app_uart.o(i.app_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_uart_flush &rArr; app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_transmit_it
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_flush
</UL>

<P><STRONG><a name="[1d6]"></a>app_uart_init</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, app_uart.o(i.app_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_register_sleep_cb
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_gpio_config
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_config_dma
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
</UL>

<P><STRONG><a name="[1cf]"></a>app_uart_receive_async</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_uart.o(i.app_uart_receive_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_uart_receive_async
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_it
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_receive_dma
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_receive_open
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_evt_handler
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_receive_open
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_evt_handler
</UL>

<P><STRONG><a name="[1df]"></a>app_uart_transmit_async</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_uart.o(i.app_uart_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_uart_transmit_async &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_write
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_send
</UL>

<P><STRONG><a name="[1e1]"></a>app_uart_transmit_sync</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_uart.o(i.app_uart_transmit_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_uart_transmit_sync
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>

<P><STRONG><a name="[1e9]"></a>atts_l2cc_pdu_recv_handler_patch</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, atts_patch.o(i.atts_l2cc_pdu_recv_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_hdl_value_cfm (via Veneer)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler_patch
</UL>

<P><STRONG><a name="[214]"></a>atts_pdu_handler_table_replace</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, atts_patch.o(i.atts_pdu_handler_table_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[d8]"></a>bb_watch_timer_cbk_patch</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, sch_prog_patch.o(i.bb_watch_timer_cbk_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = bb_watch_timer_cbk_patch &rArr; rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_alarm_set
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_abort_recovery
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sch_prog_patch.o(i.sch_prog_frm_cbk_replace)
</UL>
<P><STRONG><a name="[1fb]"></a>ble_adv_env_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cold_patch.o(i.ble_adv_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_adv_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_replace
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[fe]"></a>ble_bm_set_sec_info_patch</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, ble_bondmgr_patch.o(i.ble_bm_set_sec_info_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = ble_bm_set_sec_info_patch &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lru_bond_list
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_unused_bond_idx
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_peer_addr
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_ltk_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[202]"></a>ble_common_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cold_patch.o(i.ble_common_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_common_env_init &rArr; ble_sdk_env_init &rArr; ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gapm_replace
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sdk_replace
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_frm_cbk_replace
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_replace
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_func_replace
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_replace
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_gdx_replace
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[20c]"></a>ble_communication_core_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.ble_communication_core_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_communication_core_init_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>

<P><STRONG><a name="[20e]"></a>ble_con_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, cold_patch.o(i.ble_con_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_replace
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llcp_pdu_handler_tab_replace
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt_func_replace
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_prf_msg_handler_tab_replace
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_replace
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_encrypt_replace
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_replace
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_pdu_handler_table_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[218]"></a>ble_core_init_without_stack_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_core_init_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_ble_heartbeat_period_set
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
</UL>

<P><STRONG><a name="[193]"></a>ble_gap_connect</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, ble_sdk_gapm_patch.o(i.ble_gap_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_gap_connect
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_malloc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_opera_start
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scan_stop_handler
</UL>

<P><STRONG><a name="[237]"></a>ble_gatt_mtu_exch_allow</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_sdk_gatt_task_patch.o(i.ble_gatt_mtu_exch_allow))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>

<P><STRONG><a name="[21e]"></a>ble_gattc_indicate_cfm</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_indicate_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm_rom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gattc_event_ind_handler_patch
</UL>

<P><STRONG><a name="[164]"></a>ble_gattc_mtu_exchange</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_mtu_exchange))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_gattc_mtu_exchange
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange_rom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
</UL>

<P><STRONG><a name="[222]"></a>ble_gattc_prf_services_browse</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_prf_services_browse))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_prf_services_browse
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_services_browse_rom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_disc_srvc_start
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_disc_srvc_start
</UL>

<P><STRONG><a name="[224]"></a>ble_gattc_prf_write</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_prf_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_prf_write
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write_rom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_notify_set
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_notify_set
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>

<P><STRONG><a name="[226]"></a>ble_gattc_prf_write_no_resp</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_sdk_gattc_patch.o(i.ble_gattc_prf_write_no_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write_no_resp_rom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_gatt_check_conidx
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
</UL>

<P><STRONG><a name="[0]"></a>ble_init_cmp_callback</STRONG> (Thumb, 238 bytes, Stack size 56 bytes, user_app.o(i.ble_init_cmp_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = ble_init_cmp_callback &rArr; gap_params_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sdk_verison_get
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_client_init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_client_init
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_addr_get
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.data)
</UL>
<P><STRONG><a name="[22d]"></a>ble_is_prevent_sleep_without_stack_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rwip_sleep_common.o(i.ble_is_prevent_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_is_prevent_sleep_without_stack_init &rArr; platform_rng2_calibration_is_busy
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_rng2_calibration_is_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[84]"></a>ble_nvds_del</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.ble_nvds_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_nvds_del
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[83]"></a>ble_nvds_put</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.ble_nvds_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = ble_nvds_put &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_nvds_patch.o(i.ble_nvds_set_entry)
</UL>
<P><STRONG><a name="[243]"></a>ble_nvds_set_entry</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.ble_nvds_set_entry))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
</UL>

<P><STRONG><a name="[22f]"></a>ble_scan_env_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cold_patch.o(i.ble_scan_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_scan_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_replace
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_replace
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_start_replace
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_replace
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[20b]"></a>ble_sdk_env_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, platform_gr55xx.o(i.ble_sdk_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_sdk_env_init &rArr; ble_con_env_init &rArr; llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_msg_patch_tab
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_hci_cmd_patch_tab
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reg_gapm_hci_evt_patch_tab
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[20a]"></a>ble_sdk_gapm_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[23]"></a>ble_sdk_gatt_mtu_changed_ind_handler_patch</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatt_mtu_changed_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_sdk_gatt_mtu_changed_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_mtu_exch_allow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>ble_sdk_gattc_event_ind_handler_patch</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gattc_event_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_sdk_gattc_event_ind_handler_patch &rArr; ble_gattc_indicate_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>ble_sdk_gatts_svc_changed_cfg_ind_handler_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_sdk_gatt_task_patch.o(i.ble_sdk_gatts_svc_changed_cfg_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sdk_gatts_svc_changed_cfg_ind_handler_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_get_bond_dev_addr
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_bond_cccd
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattm_svc_start_hdl_get
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[87]"></a>ble_sdk_init_patch</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ble_sdk_patch.o(i.ble_sdk_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ble_sdk_init_patch &rArr; rand_seed_gen &rArr; rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_func
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_patch.o(i.ble_sdk_replace)
</UL>
<P><STRONG><a name="[208]"></a>ble_sdk_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_sdk_patch.o(i.ble_sdk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[240]"></a>ble_sdk_rwip_init</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, system_sdk_patch.o(i.ble_sdk_rwip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_sdk_rwip_init
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_set_heaps_table_entry
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_rwip_init
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rf_init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_get_nvds_api_entry
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_set_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[246]"></a>ble_sleep_successfully_without_stack_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_successfully_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wait_for_core_sleep_stat
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_time_record
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_without_stack_init
</UL>

<P><STRONG><a name="[d0]"></a>ble_sleep_without_stack_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rwip_sleep_common.o(i.ble_sleep_without_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_sleep_without_stack_init &rArr; ble_sleep_successfully_without_stack_init &rArr; ble_sleep_time_record
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sleep_successfully_without_stack_init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_prevent_sleep_without_stack_init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_in_sleep_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace)
</UL>
<P><STRONG><a name="[24a]"></a>ble_stack_init</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, system_sdk_patch.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_stack_init &rArr; ble_sdk_rwip_init
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_wakeup_source_setup
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rf_calibration_func_cb_register
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback_register
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_signal_handler_register
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup_end
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_us_2_lpcycles
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_coded_tx_gain_value
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_2M_tx_gain_value
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_config_1M_tx_gain_value
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_callback_register
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_schedule_start
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rom_prf_init
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_callback_register
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gatt_common_callback_register
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_callback_register
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;register_rwip_wakeup
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_rwip_init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3f3]"></a>ble_wakeup_osc_time_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_get))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3f4]"></a>ble_wakeup_osc_time_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, platform_sdk.o(i.ble_wakeup_osc_time_set))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[18e]"></a>bsp_log_init</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, bsp.o(i.bsp_log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = bsp_log_init &rArr; bsp_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_init
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[90]"></a>bsp_uart_flush</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(i.bsp_uart_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_uart_flush &rArr; app_uart_flush &rArr; app_systick_init &rArr; pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[25b]"></a>bsp_uart_init</STRONG> (Thumb, 88 bytes, Stack size 96 bytes, bsp.o(i.bsp_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = bsp_uart_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_log_init
</UL>

<P><STRONG><a name="[91]"></a>bsp_uart_send</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bsp.o(i.bsp_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_uart_send &rArr; app_uart_transmit_async &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp.o(i.bsp_log_init)
</UL>
<P><STRONG><a name="[25f]"></a>calendar_run</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, main.o(i.calendar_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = calendar_run &rArr; hal_calendar_init_time &rArr; hal_calendar_set_alarm &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[262]"></a>clk_period_1V_set</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, platform_sdk.o(i.clk_period_1V_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clk_period_1V_set
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[263]"></a>cold_patch_apply</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cold_patch.o(i.cold_patch_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cold_patch_apply &rArr; rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_replace
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_without_stack_init_replace
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_callback_replace
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_cmd_handler_replace
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[371]"></a>compute_pref_period</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.compute_pref_period))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_pref_param_compute_func_patch
</UL>

<P><STRONG><a name="[c2]"></a>cpll_calibration</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, platform_sdk.o(i.cpll_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = cpll_calibration &rArr; cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_sdk.o(i.platform_sdk_init)
</UL>
<P><STRONG><a name="[271]"></a>cpll_calibration_init</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, platform_sdk.o(i.cpll_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = cpll_calibration_init &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[270]"></a>cpll_lock_check_recover</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, platform_sdk.o(i.cpll_lock_check_recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = cpll_lock_check_recover &rArr; cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration
</UL>

<P><STRONG><a name="[278]"></a>current_shape_set</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, platform_sdk.o(i.current_shape_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = current_shape_set
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[267]"></a>dfu_cmd_handler_replace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_set_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[7b]"></a>dma_err_callback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_dma.o(i.dma_err_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_err_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(i.app_dma_init)
</UL>
<P><STRONG><a name="[7a]"></a>dma_tfr_callback</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_dma.o(i.dma_tfr_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_tfr_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(i.app_dma_init)
</UL>
<P><STRONG><a name="[282]"></a>ext_hp_gain_calibration</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, rf_gdx_patch.o(i.ext_hp_gain_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = ext_hp_gain_calibration &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sx_frequence
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_disable
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_F_value_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[33f]"></a>find_new_msg_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ke_task_patch.o(i.find_new_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_msg_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_to_sdk_msg_handler_patch
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_schedule_patch
</UL>

<P><STRONG><a name="[28c]"></a>finish_encryt_check_by_llcp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, llc_encrypt_patch.o(i.finish_encryt_check_by_llcp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[28e]"></a>firmware_switch_pin_init</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, maxeye_gpio.o(i.firmware_switch_pin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = firmware_switch_pin_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1a3]"></a>firmware_switch_pin_set</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, maxeye_gpio.o(i.firmware_switch_pin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = firmware_switch_pin_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[28f]"></a>firmware_switch_rsp</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, maxeye_uart.o(i.firmware_switch_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = firmware_switch_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[292]"></a>firmware_switch_start</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, maxeye_gpio.o(i.firmware_switch_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = firmware_switch_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[294]"></a>fpb_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, platform_patch.o(i.fpb_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fpb_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[be]"></a>fpb_patch_enable</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, fpb_patch_init.o(i.fpb_patch_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = fpb_patch_enable &rArr; fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(i.platform_init)
</UL>
<P><STRONG><a name="[77]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, app_log.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_data_trans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[293]"></a>fun_replace_by_svc</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, platform_patch.o(i.fun_replace_by_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fun_replace_by_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_svc_cmd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ori_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_patch_enable
</UL>

<P><STRONG><a name="[8]"></a>gap_activity_stopped_ind_handler_patch</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, ble_sdk_gapm_patch.o(i.gap_activity_stopped_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gap_activity_stopped_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>gap_cmp_evt_handler_patch</STRONG> (Thumb, 384 bytes, Stack size 48 bytes, ble_sdk_gapc_patch.o(i.gap_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_cmp_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>gap_connection_req_ind_handler_patch</STRONG> (Thumb, 302 bytes, Stack size 592 bytes, ble_sdk_gapc_patch.o(i.gap_connection_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = gap_connection_req_ind_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_role_get
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_conn_complete
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_reslv_addr
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_ral_dev_list
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>gap_dev_bdaddr_ind_handler_patch</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.gap_dev_bdaddr_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_dev_bdaddr_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_malloc
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_free
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_actv_type_by_actv_idx
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_save
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_per_sync_idx_by_actv_idx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_adv_idx_by_actv_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>gap_disconnect_ind_handler_patch</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ble_sdk_gapc_patch.o(i.gap_disconnect_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_disconnect_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_clear_bond_info_env
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_on_disconn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>gapc_hci_handler_patch</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.gapc_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapc_hci_handler_patch &rArr; hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>gapm_activity_create_cmd_handler_patch</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gapm_actv_patch.o(i.gapm_activity_create_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_activity_create_cmd_handler_patch &rArr; gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create (via Veneer)
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_free_idx (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_check_create_param (via Veneer)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[95]"></a>gapm_adv_check_param_func_patch</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, gapm_adv_patch.o(i.gapm_adv_check_param_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_check_param_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_adv_patch.o(i.gapm_adv_replace)
</UL>
<P><STRONG><a name="[1fd]"></a>gapm_adv_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_adv_patch.o(i.gapm_adv_replace))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>

<P><STRONG><a name="[7]"></a>gapm_cmp_evt_handler_patch</STRONG> (Thumb, 264 bytes, Stack size 200 bytes, ble_sdk_gapm_patch.o(i.gapm_cmp_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gapm_cmp_evt_handler_patch &rArr; gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_update_bond_info
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info_by_peer_irk
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_hdl
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle (via Veneer)
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_get
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_cache_data_init
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_replace
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_update_max_len
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[25]"></a>gapm_hci_handler_patch</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapm_task_patch.o(i.gapm_hci_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_hci_handler_patch &rArr; find_new_gapm_hci_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_gapm_hci_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[99]"></a>gapm_init_connection_ind_func_patch</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, gapm_init_patch.o(i.gapm_init_connection_ind_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_init_connection_ind_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stopped (via Veneer)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type (via Veneer)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_local_addr (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_replace)
</UL>
<P><STRONG><a name="[2b9]"></a>gapm_init_create_patch</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gapm_init_patch.o(i.gapm_init_create_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_init_create_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_addr_type_valid (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester (via Veneer)
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type (via Veneer)
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created (via Veneer)
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler_patch
</UL>

<P><STRONG><a name="[233]"></a>gapm_init_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_init_patch.o(i.gapm_init_replace))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[96]"></a>gapm_init_start_patch</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gapm_init_patch.o(i.gapm_init_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_init_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_check_param (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[97]"></a>gapm_init_stop_patch</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_init_patch.o(i.gapm_init_stop_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_init_stop_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_create_con_cancel_cmd (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init_patch.o(i.gapm_init_create_patch)
</UL>
<P><STRONG><a name="[239]"></a>gatt_find_item_patch</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_sdk_gatts_patch.o(i.gatt_find_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_find_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[29e]"></a>gatt_on_connection_func_patch</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, ble_sdk_gatts_patch.o(i.gatt_on_connection_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_on_connection_func_patch &rArr; gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_on_connection
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_recovery_cccd
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_cccd
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_gatt_info
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_connection_req_ind_handler_patch
</UL>

<P><STRONG><a name="[9a]"></a>gatt_on_disconnection_func_patch</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ble_sdk_gatts_patch.o(i.gatt_on_disconnection_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gatt_on_disconnection_func_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_on_disconnection
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_remove_item_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace)
</UL>
<P><STRONG><a name="[215]"></a>gatt_on_disconnection_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_sdk_gatts_patch.o(i.gatt_on_disconnection_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[2d7]"></a>get_data_from_adc</STRONG> (Thumb, 204 bytes, Stack size 64 bytes, platform_adc.o(i.get_data_from_adc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = get_data_from_adc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[1c4]"></a>get_next_timer</STRONG> (Thumb, 136 bytes, Stack size 36 bytes, app_timer.o(i.get_next_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = get_next_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[290]"></a>get_xorcheck</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_enc.o(i.get_xorcheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_periheral_hash
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_reset
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_key
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_sign_hash
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_key
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_hash
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_chipid
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_authorize_key
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_uart_rst_voltameter_rsp
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_err
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_ack
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_level_rsp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_cali_rsp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_sleep_rsp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_shipmode_rsp
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_set_mac_rsp
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_rssi_rsp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pcba_test_rsp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_mac_rsp
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_enc_rsp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_disable_preload_rsp
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_batt_cap_rsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_rsp
</UL>

<P><STRONG><a name="[2df]"></a>gui_animation_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_animation.o(i.gui_animation_init))
<BR><BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_init
</UL>

<P><STRONG><a name="[2db]"></a>gui_fill_mem</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_lcd_config.o(i.gui_fill_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gui_fill_mem &rArr; lcd_fill_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_fill_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>

<P><STRONG><a name="[2dd]"></a>gui_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_lcd_config.o(i.gui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gui_init &rArr; lcd_init &rArr; st7735_init &rArr; app_spi_init &rArr; app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_animation_init
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
</UL>

<P><STRONG><a name="[2e0]"></a>gui_point</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_lcd_config.o(i.gui_point))
<BR><BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_draw_point
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_color
</UL>

<P><STRONG><a name="[2e2]"></a>gui_point_color</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, gui_color.o(i.gui_point_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_one_gb2312
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_char8_16
</UL>

<P><STRONG><a name="[45b]"></a>gui_refresh</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_lcd_config.o(i.gui_refresh))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>

<P><STRONG><a name="[2e3]"></a>gui_refresh_schedule</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_lcd_config.o(i.gui_refresh_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gui_refresh_schedule &rArr; lcd_refresh &rArr; lcd_set_window &rArr; st7735_write_data &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[45a]"></a>gui_set_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_color.o(i.gui_set_color))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>

<P><STRONG><a name="[2e5]"></a>gui_set_refresh_mem</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_lcd_config.o(i.gui_set_refresh_mem))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_gui_init
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>

<P><STRONG><a name="[408]"></a>hal_adc_is_using</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, platform_sdk.o(i.hal_adc_is_using))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[38]"></a>hal_aon_gpio_callback</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, app_gpiote.o(i.hal_aon_gpio_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hal_aon_gpio_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_get_wakeup_flag
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_aon_gpio.o(.data)
</UL>
<P><STRONG><a name="[176]"></a>hal_aon_gpio_deinit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio.o(i.hal_aon_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_aon_gpio_deinit &rArr; hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[2e8]"></a>hal_aon_gpio_deinit_ext</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_aon_gpio_deinit_ext &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit
</UL>

<P><STRONG><a name="[179]"></a>hal_aon_gpio_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_aon_gpio.o(i.hal_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_register_callback (via Veneer)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[2eb]"></a>hal_aon_gpio_init_ext</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init
</UL>

<P><STRONG><a name="[2ed]"></a>hal_aon_gpio_irq_handler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_gpio_irq_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_br_callback (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_gpio_read_flag_it_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXT2_IRQHandler
</UL>

<P><STRONG><a name="[17d]"></a>hal_aon_gpio_write_pin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.hal_aon_gpio_write_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>

<P><STRONG><a name="[43]"></a>hal_aon_wdt_alarm_callback</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, maxeye_wdt.o(i.hal_aon_wdt_alarm_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hal_aon_wdt_alarm_callback &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_aon_wdt.o(.data)
</UL>
<P><STRONG><a name="[2f0]"></a>hal_aon_wdt_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_aon_wdt.o(i.hal_aon_wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hal_aon_wdt_init &rArr; hal_aon_wdt_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_register_callback (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
</UL>

<P><STRONG><a name="[2f2]"></a>hal_aon_wdt_init_ext</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gr55xx_hal_aon_wdt_patch.o(i.hal_aon_wdt_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_aon_wdt_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init
</UL>

<P><STRONG><a name="[3bc]"></a>hal_aon_wdt_refresh</STRONG> (Thumb, 184 bytes, Stack size 28 bytes, gr55xx_hal_aon_wdt_patch.o(i.hal_aon_wdt_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = hal_aon_wdt_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
</UL>

<P><STRONG><a name="[40]"></a>hal_calendar_alarm_callback</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, main.o(i.hal_calendar_alarm_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = hal_calendar_alarm_callback &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_calendar.o(.data)
</UL>
<P><STRONG><a name="[2f3]"></a>hal_calendar_get_time</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, gr55xx_hal_calendar_patch.o(i.hal_calendar_get_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_wrapcnt
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_time2seconds
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_alarm_callback
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
</UL>

<P><STRONG><a name="[260]"></a>hal_calendar_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_calendar.o(i.hal_calendar_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_calendar_init &rArr; hal_calendar_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_register_callback
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_run
</UL>

<P><STRONG><a name="[2f7]"></a>hal_calendar_init_ext</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, gr55xx_hal_calendar_patch.o(i.hal_calendar_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hal_calendar_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_set_clock_div
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init
</UL>

<P><STRONG><a name="[261]"></a>hal_calendar_init_time</STRONG> (Thumb, 302 bytes, Stack size 56 bytes, gr55xx_hal_calendar_patch.o(i.hal_calendar_init_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = hal_calendar_init_time &rArr; hal_calendar_set_alarm &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_wrapcnt
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_time2seconds
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_seconds2time
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_run
</UL>

<P><STRONG><a name="[42]"></a>hal_calendar_overflow_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_calendar.o(i.hal_calendar_overflow_callback))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_calendar.o(.data)
</UL>
<P><STRONG><a name="[2f9]"></a>hal_calendar_set_alarm</STRONG> (Thumb, 356 bytes, Stack size 56 bytes, gr55xx_hal_calendar_patch.o(i.hal_calendar_set_alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hal_calendar_set_alarm &rArr; hal_calendar_get_time &rArr; calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_reload_alarm
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_alarm
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_cover_time2seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
</UL>

<P><STRONG><a name="[41]"></a>hal_calendar_tick_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_calendar.o(i.hal_calendar_tick_callback))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_calendar.o(.data)
</UL>
<P><STRONG><a name="[16b]"></a>hal_dma_init</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, gr55xx_hal_dma_patch.o(i.hal_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_struct_init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
</UL>

<P><STRONG><a name="[273]"></a>hal_dwt_disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_delay
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[272]"></a>hal_dwt_enable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_hal_patch.o(i.hal_dwt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_dwt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_delay
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[451]"></a>hal_efuse_deinit_ext</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[452]"></a>hal_efuse_init_ext</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gr55xx_hal_efuse_patch.o(i.hal_efuse_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_efuse_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>

<P><STRONG><a name="[26e]"></a>hal_flash_erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[2fe]"></a>hal_flash_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, hal_flash_patch.o(i.hal_flash_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_init_ext
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_security_enable_status_check
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>

<P><STRONG><a name="[27a]"></a>hal_flash_read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_flash_patch.o(i.hal_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>

<P><STRONG><a name="[27c]"></a>hal_flash_write_r</STRONG> (Thumb, 110 bytes, Stack size 288 bytes, hal_flash_patch.o(i.hal_flash_write_r))
<BR><BR>[Stack]<UL><LI>Max Depth = 936<LI>Call Chain = hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_read
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
</UL>

<P><STRONG><a name="[175]"></a>hal_gpio_deinit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio.o(i.hal_gpio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[37]"></a>hal_gpio_exti_callback</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_gpiote.o(i.hal_gpio_exti_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_gpio_exti_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_gpio.o(.data)
</UL>
<P><STRONG><a name="[178]"></a>hal_gpio_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gr55xx_hal_gpio.o(i.hal_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_register_callback
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[1a1]"></a>hal_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gr55xx_hal.o(i.hal_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_register_callback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_wake_up_ind
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
</UL>

<P><STRONG><a name="[177]"></a>hal_msio_deinit</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hal_msio_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_deinit
</UL>

<P><STRONG><a name="[17a]"></a>hal_msio_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gr55xx_hal_msio_patch.o(i.hal_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hal_msio_init &rArr; ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[36]"></a>hal_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal.o(i.hal_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>hal_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal.o(i.hal_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal.o(.data)
</UL>
<P><STRONG><a name="[1c6]"></a>hal_pwr_config_timer_wakeup</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gr55xx_hal_pwr.o(i.hal_pwr_config_timer_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_register_timer_elaspsed_handler
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_drv_stop
</UL>

<P><STRONG><a name="[30a]"></a>hal_rng_deinit_ext</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_deinit_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_rng_deinit_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_rng_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[30c]"></a>hal_rng_generate_random_number</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_generate_random_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_rng_init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[438]"></a>hal_rng_init_ext</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gr55xx_hal_rng_patch.o(i.hal_rng_init_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_rng_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
</UL>

<P><STRONG><a name="[3c]"></a>hal_spi_abort_cplt_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_spi.o(i.hal_spi_abort_cplt_callback))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[19c]"></a>hal_spi_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_spi.o(i.hal_spi_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_spi_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_register_callback
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
</UL>

<P><STRONG><a name="[3b]"></a>hal_spi_error_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_spi.o(i.hal_spi_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_spi_error_callback &rArr; app_spi_event_call &rArr; app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[19d]"></a>hal_spi_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_spi.o(i.hal_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_spi_init
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_register_callback
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
</UL>

<P><STRONG><a name="[3a]"></a>hal_spi_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_spi.o(i.hal_spi_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>hal_spi_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_spi.o(i.hal_spi_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>hal_spi_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_spi.o(i.hal_spi_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_spi_rx_cplt_callback &rArr; app_spi_event_call &rArr; app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[19f]"></a>hal_spi_transmit_it</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gr55xx_hal_spi_patch.o(i.hal_spi_transmit_it))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_wait_flag_state_until_timeout
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_config
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
</UL>

<P><STRONG><a name="[3e]"></a>hal_spi_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_spi.o(i.hal_spi_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_spi_tx_cplt_callback &rArr; app_spi_event_call &rArr; app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>hal_spi_tx_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_spi.o(i.hal_spi_tx_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hal_spi_tx_rx_cplt_callback &rArr; app_spi_event_call &rArr; app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_spi.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>hal_uart_abort_cplt_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_abort_cplt_callback))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>hal_uart_abort_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_abort_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_abort_rx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>hal_uart_abort_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_abort_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_abort_tx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[1d9]"></a>hal_uart_deinit</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart.o(i.hal_uart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[31]"></a>hal_uart_error_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_error_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_error_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[1d1]"></a>hal_uart_get_state</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_uart_patch.o(i.hal_uart_get_state))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_prepare_for_sleep
</UL>

<P><STRONG><a name="[1da]"></a>hal_uart_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gr55xx_hal_uart.o(i.hal_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hal_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_register_callback
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_init_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[2e]"></a>hal_uart_msp_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_msp_deinit))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>hal_uart_msp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gr55xx_hal_uart.o(i.hal_uart_msp_init))
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>hal_uart_rx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_rx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_rx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>hal_uart_tx_cplt_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_uart.o(i.hal_uart_tx_cplt_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hal_uart_tx_cplt_callback &rArr; app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gr55xx_hal_uart.o(.data)
</UL>
<P><STRONG><a name="[413]"></a>hbyte_to_Lbyte</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_uart.o(i.hbyte_to_Lbyte))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[26]"></a>hci_le_add_dev_to_wlst_cmd_handler_patch</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, llm_hci_patch.o(i.hci_le_add_dev_to_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_add_dev_to_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_empty_entry
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_add
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>hci_le_clear_wlst_cmd_handler_patch</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_clear_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_clear_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>hci_le_cmd_cmp_evt_init_handler_patch</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gapm_init_patch.o(i.hci_le_cmd_cmp_evt_init_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_cmd_cmp_evt_init_handler_patch &rArr; init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_stopping_handler
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_started_handler
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt (via Veneer)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>hci_le_con_upd_cmd_handler_patch</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, llc_con_upd_patch.o(i.hci_le_con_upd_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_con_upd_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_cmd_stat_send
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_hci_patch.o(i.llc_hci_new_handler_find)
</UL>
<P><STRONG><a name="[29]"></a>hci_le_ext_create_con_cmd_handler_patch</STRONG> (Thumb, 806 bytes, Stack size 208 bytes, llm_hci_patch.o(i.hci_le_ext_create_con_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = hci_le_ext_create_con_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_dev_connected
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_stat_send
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_addr_is_in_ral_list
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>hci_le_rmv_dev_from_wlst_cmd_handler_patch</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, llm_hci_patch.o(i.hci_le_rmv_dev_from_wlst_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_rmv_dev_from_wlst_cmd_handler_patch &rArr; llm_is_wl_accessible_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_white_list_rem
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_dev_list_search
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_accessible_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>hci_le_set_ext_scan_en_cmd_handler_patch</STRONG> (Thumb, 532 bytes, Stack size 40 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_en_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_le_set_ext_scan_en_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_bdaddr_compare (via Veneer)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_update_dbg_act_state_info
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_scan_start
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_is_wl_empty
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_stop
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_params_update
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_res_list_is_empty
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>hci_le_set_ext_scan_param_cmd_handler_patch</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, llm_scan_patch.o(i.hci_le_set_ext_scan_param_cmd_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_le_set_ext_scan_param_cmd_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_cmd_cmp_send
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>hci_nb_cmp_pkts_evt_handler_patch</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, l2cc_task_patch.o(i.hci_nb_cmp_pkts_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hci_nb_cmp_pkts_evt_handler_patch &rArr; get_id_by_conn_idx
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_id_by_conn_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[fb]"></a>hci_send_2_controller_patch</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, hci_patch.o(i.hci_send_2_controller_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hci_send_2_controller_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_look_for_cmd_desc
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[c]"></a>host_to_sdk_msg_handler_patch</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, ble_sdk_task_patch.o(i.host_to_sdk_msg_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = host_to_sdk_msg_handler_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_msg_handler_func
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[340]"></a>i0nd_ioldo_3v_get</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, platform_sdk.o(i.i0nd_ioldo_3v_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
</UL>

<P><STRONG><a name="[345]"></a>internal_3p3_ioldo_update</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, platform_sdk.o(i.internal_3p3_ioldo_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
</UL>

<P><STRONG><a name="[ff]"></a>ke_task_schedule_patch</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, ke_task_patch.o(i.ke_task_schedule_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ke_task_schedule_patch &rArr; find_new_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_handler_get
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_is_free
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_msg_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> fpb_patch_init.o(.constdata)
</UL>
<P><STRONG><a name="[d]"></a>l2cc_pdu_recv_ind_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gattc_task_patch.o(i.l2cc_pdu_recv_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2cc_pdu_recv_ind_handler_patch &rArr; atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[213]"></a>l2cm_l2cap_tx_handler_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace))
<BR><BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[2e1]"></a>lcd_draw_point</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, st7735.o(i.lcd_draw_point))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point
</UL>

<P><STRONG><a name="[2dc]"></a>lcd_fill_mem</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, st7735.o(i.lcd_fill_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lcd_fill_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_mem
</UL>

<P><STRONG><a name="[2de]"></a>lcd_init</STRONG> (Thumb, 460 bytes, Stack size 8 bytes, st7735.o(i.lcd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lcd_init &rArr; st7735_init &rArr; app_spi_init &rArr; app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_cmd
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_init
</UL>

<P><STRONG><a name="[2e4]"></a>lcd_refresh</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, st7735.o(i.lcd_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lcd_refresh &rArr; lcd_set_window &rArr; st7735_write_data &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_buffer
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_window
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_memory
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_refresh_schedule
</UL>

<P><STRONG><a name="[2e6]"></a>lcd_set_memory</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, st7735.o(i.lcd_set_memory))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_refresh_mem
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_refresh
</UL>

<P><STRONG><a name="[356]"></a>ldo_voltage_set</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, platform_sdk.o(i.ldo_voltage_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[2ec]"></a>ll_aon_gpio_init</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_init_ext
</UL>

<P><STRONG><a name="[aa]"></a>ll_channel_map_ind_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, llc_chmap_upd_patch.o(i.ll_channel_map_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_channel_map_ind_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_ch_map_proc_continue_func
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[ac]"></a>ll_connection_param_req_handler_patch</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, llc_con_upd_patch.o(i.ll_connection_param_req_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_connection_param_req_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_le_evt_mask_check
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[ab]"></a>ll_connection_update_ind_handler_patch</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, llc_con_upd_patch.o(i.ll_connection_update_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ll_connection_update_ind_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_con_upd_param_in_range
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[2fd]"></a>ll_dma_init</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_suspend_channel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_resume_channel
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_is_enabled_channel
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_is_empty_fifo
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_init
</UL>

<P><STRONG><a name="[307]"></a>ll_msio_init</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ll_msio_init &rArr; ll_msio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_msio_init
</UL>

<P><STRONG><a name="[ad]"></a>ll_phy_req_handler_patch</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, llc_phy_upd_patch.o(i.ll_phy_req_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ll_phy_req_handler_patch &rArr; llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_reg
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace)
</UL>
<P><STRONG><a name="[17]"></a>llc_auth_payl_nearly_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_nearly_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_nearly_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_nearly_to_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>llc_auth_payl_real_to_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, llc_le_ping_patch.o(i.llc_auth_payl_real_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_auth_payl_real_to_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_auth_payl_real_to_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[20f]"></a>llc_con_upd_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.llc_con_upd_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[211]"></a>llc_encrypt_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, llc_encrypt_patch.o(i.llc_encrypt_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[b]"></a>llc_hci_command_handler_patch</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, llc_hci_patch.o(i.llc_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_hci_command_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_new_handler_find
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[36a]"></a>llc_hci_new_handler_find</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_hci_patch.o(i.llc_hci_new_handler_find))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_command_handler_patch
</UL>

<P><STRONG><a name="[375]"></a>llc_loc_con_upd_proc_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_con_upd_patch.o(i.llc_loc_con_upd_proc_stop))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[e]"></a>llc_loc_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_loc_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_loc_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[374]"></a>llc_loc_phy_upd_proc_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, llc_phy_upd_patch.o(i.llc_loc_phy_upd_proc_stop))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[19]"></a>llc_op_dl_upd_ind_handler_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, llc_dl_upd_patch.o(i.llc_op_dl_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_op_dl_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_op_dl_upd_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[35c]"></a>llc_proc_collision_check_slave</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, llc_patch.o(i.llc_proc_collision_check_slave))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_proc_collision_check_slave
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_id_get
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_phy_upd_proc_stop
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_con_upd_proc_stop
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_instant_proc_type_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_phy_req_handler_patch
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_update_ind_handler_patch
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_connection_param_req_handler_patch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_channel_map_ind_handler_patch
</UL>

<P><STRONG><a name="[a3]"></a>llc_rem_con_upd_proc_continue_patch</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, llc_con_upd_patch.o(i.llc_rem_con_upd_proc_continue_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = llc_rem_con_upd_proc_continue_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_unreg
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_set
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_reject_ind_pdu_send
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_warn (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_len_update_for_intv
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_update
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_connection_param_rsp_pdu_send
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_con_upd_info_send
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_con_param_req_evt_send
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_con_upd_patch.o(i.llc_con_upd_replace)
</UL>
<P><STRONG><a name="[a4]"></a>llc_rem_encrypt_proc_continue_patch</STRONG> (Thumb, 672 bytes, Stack size 32 bytes, llc_encrypt_patch.o(i.llc_rem_encrypt_proc_continue_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = llc_rem_encrypt_proc_continue_patch &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_le_evt_mask_check
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_tx_enc
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_rx_enc
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_enc_key_load
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_flow_set
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_sk_gen
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_set
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_pause_set
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_set
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_state_get
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_state_set
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_start_enc_rsp_pdu_send
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_start_enc_req_pdu_send
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_reject_ind_pdu_send
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_pause_enc_rsp_pdu_send
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_ll_enc_rsp_pdu_send
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_iv_skd_rand_gen
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_ltk_request_evt_send
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_disconnect
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_finish
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_encrypt_patch.o(i.llc_encrypt_replace)
</UL>
<P><STRONG><a name="[f]"></a>llc_rem_llcp_rsp_to_handler_patch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_rem_llcp_rsp_to_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llc_rem_llcp_rsp_to_handler_patch &rArr; llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[212]"></a>llcp_pdu_handler_tab_replace</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, llc_llcp_patch.o(i.llcp_pdu_handler_tab_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llcp_pdu_handler_tab_replace
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[12]"></a>lld_acl_rx_ind_handler_patch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, llc_task_patch.o(i.lld_acl_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_acl_rx_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[ae]"></a>lld_adv_frm_cbk_func_patch</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_adv_frm_cbk_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_adv_frm_cbk_func_patch &rArr; lld_adv_frm_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_skip_isr
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_adv_patch.o(i.lld_adv_replace)
</UL>
<P><STRONG><a name="[38f]"></a>lld_adv_frm_isr_patch</STRONG> (Thumb, 878 bytes, Stack size 48 bytes, lld_adv_patch.o(i.lld_adv_frm_isr_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_adv_frm_isr_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_remove
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_scan_rsp_data_set
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_pkt_rx
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_ext_chain_construct
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_end
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_aux_ch_idx_set
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_adv_data_set
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_try_to_free_old_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[1fc]"></a>lld_adv_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_adv_replace))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_adv_env_init
</UL>

<P><STRONG><a name="[ba]"></a>lld_adv_start_func_patch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lld_scan_patch.o(i.lld_adv_start_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_adv_start_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_start_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[14]"></a>lld_ch_map_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_chmap_upd_patch.o(i.lld_ch_map_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_ch_map_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[36c]"></a>lld_con_env_is_free</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_env_is_free))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler_patch
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler_patch
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler_patch
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler_patch
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ch_map_upd_cfm_handler_patch
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_acl_rx_ind_handler_patch
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_rsp_to
</UL>

<P><STRONG><a name="[373]"></a>lld_con_instant_proc_type_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_instant_proc_type_reset))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_collision_check_slave
</UL>

<P><STRONG><a name="[16]"></a>lld_con_offset_upd_ind_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_con_upd_patch.o(i.lld_con_offset_upd_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_con_offset_upd_ind_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_upd_ind_handler
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>lld_con_param_upd_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_con_upd_patch.o(i.lld_con_param_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_con_param_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_param_upd_cfm_handler
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[210]"></a>lld_con_replace</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lld_con_patch.o(i.lld_con_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[b0]"></a>lld_con_start_patch</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lld_con_patch.o(i.lld_con_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_con_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_start_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[b2]"></a>lld_con_tx_prog_patch</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, lld_con_patch.o(i.lld_con_tx_prog_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lld_con_tx_prog_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_con_patch.o(i.lld_con_replace)
</UL>
<P><STRONG><a name="[3a7]"></a>lld_con_ultra_link_update</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lld_con_patch.o(i.lld_con_ultra_link_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_con_ultra_link_update
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler_patch
</UL>

<P><STRONG><a name="[b4]"></a>lld_init_patch</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lld_patch.o(i.lld_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_init_patch &rArr; lld_scan_discard_last_rx_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_func
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_discard_last_rx_buff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_patch.o(i.lld_init_replace)
</UL>
<P><STRONG><a name="[230]"></a>lld_init_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_patch.o(i.lld_init_replace))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[b7]"></a>lld_init_start_patch</STRONG> (Thumb, 1986 bytes, Stack size 192 bytes, lld_init_patch.o(i.lld_init_start_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = lld_init_start_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_read_clock
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_ral_search
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_connect_req_pack
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_aa_gen
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_init_patch.o(i.lld_init_start_replace)
</UL>
<P><STRONG><a name="[232]"></a>lld_init_start_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lld_init_patch.o(i.lld_init_start_replace))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[10]"></a>lld_llcp_rx_ind_handler_patch</STRONG> (Thumb, 218 bytes, Stack size 80 bytes, llc_llcp_patch.o(i.lld_llcp_rx_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lld_llcp_rx_ind_handler_patch &rArr; finish_encryt_check_by_llcp &rArr; llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_rx_ind_handler
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_ultra_link_update
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>lld_llcp_tx_cfm_handler_patch</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, llc_llcp_patch.o(i.lld_llcp_tx_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_llcp_tx_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_llcp_tx_cfm_handler
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>lld_phy_upd_cfm_handler_patch</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, llc_phy_upd_patch.o(i.lld_phy_upd_cfm_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lld_phy_upd_cfm_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_phy_upd_cfm_handler
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3a1]"></a>lld_scan_discard_last_rx_buff</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lld_scan_patch.o(i.lld_scan_discard_last_rx_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lld_scan_discard_last_rx_buff
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract (via Veneer)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_find (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init_patch
</UL>

<P><STRONG><a name="[231]"></a>lld_scan_frm_cbk_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lld_scan_patch.o(i.lld_scan_frm_cbk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_scan_env_init
</UL>

<P><STRONG><a name="[b9]"></a>lld_scan_start_func_patch</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lld_scan_patch.o(i.lld_scan_start_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lld_scan_start_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_start_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[a]"></a>llm_hci_command_handler_patch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_hci_command_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llm_hci_command_handler_patch &rArr; find_new_hci_cmd_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_new_hci_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3b0]"></a>mac_char_to_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, maxeye_product_test.o(i.mac_char_to_hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mac_char_to_hex &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
</UL>

<P><STRONG><a name="[133]"></a>$Super$$main</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = $Super$$main &rArr; app_periph_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_mBLE_eniroment
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_register
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_register
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_schedule (via Veneer)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_receive_open
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_init
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_refresh
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_aon_wdt_init
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_refresh_schedule
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_init
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_register
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_run
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>main_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_gr55xx.o(i.main_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = main_init &rArr; pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_warm_boot
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[3b3]"></a>maxeye_aon_wdt_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, maxeye_wdt.o(i.maxeye_aon_wdt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = maxeye_aon_wdt_init &rArr; hal_aon_wdt_refresh
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_refresh
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[18a]"></a>maxeye_c_disc_srvc_start</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, maxeye_srv_c.o(i.maxeye_c_disc_srvc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = maxeye_c_disc_srvc_start &rArr; ble_gattc_prf_services_browse
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_services_browse
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
</UL>

<P><STRONG><a name="[3c0]"></a>maxeye_c_tx_data_send</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, maxeye_srv_c.o(i.maxeye_c_tx_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write_no_resp
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_periheral_hash
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_reset
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_key
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_sign_hash
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_key
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_hash
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_chipid
</UL>

<P><STRONG><a name="[3be]"></a>maxeye_c_tx_notify_set</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, maxeye_srv_c.o(i.maxeye_c_tx_notify_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_c_tx_notify_set &rArr; ble_gattc_prf_write
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_process
</UL>

<P><STRONG><a name="[3bf]"></a>maxeye_cli_cb</STRONG> (Thumb, 432 bytes, Stack size 16 bytes, maxeye_enc.o(i.maxeye_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxeye_cli_cb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_process
</UL>

<P><STRONG><a name="[22a]"></a>maxeye_client_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, maxeye_srv_c.o(i.maxeye_client_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = maxeye_client_init &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_client_prf_add
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[3c2]"></a>maxeye_enc_verify</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, maxeye_enc.o(i.maxeye_enc_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = maxeye_enc_verify &rArr; user_device_write_enc_fail &rArr; maxeye_put_gb2312_string &rArr; maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3c4]"></a>maxeye_get_authorize_key</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, maxeye_enc.o(i.maxeye_get_authorize_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_get_authorize_key &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_write_enc_key
</UL>

<P><STRONG><a name="[bc]"></a>maxeye_key_int_callback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, maxeye_io_it.o(i.maxeye_key_int_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = maxeye_key_int_callback &rArr; user_device_wait_connect &rArr; maxeye_put_gb2312_string &rArr; maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_io_it.o(i.maxeye_key_int_cfg)
</UL>
<P><STRONG><a name="[190]"></a>maxeye_key_int_cfg</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, maxeye_io_it.o(i.maxeye_key_int_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = maxeye_key_int_cfg &rArr; app_gpiote_init &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[3c7]"></a>maxeye_put_char8_16</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, maxeye_font_16x16.o(i.maxeye_put_char8_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_put_char8_16 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_str8_16
</UL>

<P><STRONG><a name="[3c8]"></a>maxeye_put_gb2312_string</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, maxeye_font_16x16.o(i.maxeye_put_gb2312_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = maxeye_put_gb2312_string &rArr; maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_one_gb2312
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_wait_connect
</UL>

<P><STRONG><a name="[3c9]"></a>maxeye_put_one_gb2312</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, maxeye_font_16x16.o(i.maxeye_put_one_gb2312))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_color
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_gb2312_string
</UL>

<P><STRONG><a name="[3ca]"></a>maxeye_put_str8_16</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, maxeye_font_16x16.o(i.maxeye_put_str8_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = maxeye_put_str8_16 &rArr; maxeye_put_char8_16 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_char8_16
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_device_write_enc_fail
</UL>

<P><STRONG><a name="[3cb]"></a>maxeye_read_periheral_chipid</STRONG> (Thumb, 70 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_read_periheral_chipid))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_read_periheral_chipid &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3cc]"></a>maxeye_read_periheral_hash</STRONG> (Thumb, 68 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_read_periheral_hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_read_periheral_hash &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3cd]"></a>maxeye_read_periheral_key</STRONG> (Thumb, 78 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_read_periheral_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_read_periheral_key &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3ce]"></a>maxeye_read_periheral_sign_hash</STRONG> (Thumb, 70 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_read_periheral_sign_hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_read_periheral_sign_hash &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[1ce]"></a>maxeye_uart_cli_cb</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, maxeye_uart_cli.o(i.maxeye_uart_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = maxeye_uart_cli_cb &rArr; pencil_msg_evt_handler_t &rArr; production_enc_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_evt_handler
</UL>

<P><STRONG><a name="[18f]"></a>maxeye_uart_receive_open</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, maxeye_uart_cli.o(i.maxeye_uart_receive_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_uart_receive_open &rArr; app_uart_receive_async
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[291]"></a>maxeye_uart_send</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, maxeye_uart.o(i.maxeye_uart_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_uart_rst_voltameter_rsp
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_err
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_ack
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_level_rsp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_cali_rsp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_sleep_rsp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_shipmode_rsp
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_set_mac_rsp
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_rssi_rsp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pcba_test_rsp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_mac_rsp
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_enc_rsp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_disable_preload_rsp
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_batt_cap_rsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_rsp
</UL>

<P><STRONG><a name="[3b4]"></a>maxeye_wdt_event_register</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, maxeye_wdt.o(i.maxeye_wdt_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = maxeye_wdt_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3d0]"></a>maxeye_wdt_event_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_wdt_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_register
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_handler
</UL>

<P><STRONG><a name="[3b9]"></a>maxeye_wdt_refresh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = maxeye_wdt_refresh &rArr; hal_aon_wdt_refresh
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_wdt_refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3d1]"></a>maxeye_write_periheral_hash</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, maxeye_enc.o(i.maxeye_write_periheral_hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_write_periheral_hash &rArr; write_periheral_hash &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_periheral_hash
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3d3]"></a>maxeye_write_periheral_key</STRONG> (Thumb, 88 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_write_periheral_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_write_periheral_key &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_write_enc_key
</UL>

<P><STRONG><a name="[3d4]"></a>maxeye_write_periheral_reset</STRONG> (Thumb, 76 bytes, Stack size 520 bytes, maxeye_enc.o(i.maxeye_write_periheral_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = maxeye_write_periheral_reset &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3d5]"></a>maxeye_write_write_enc_key</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, maxeye_enc.o(i.maxeye_write_write_enc_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = maxeye_write_write_enc_key &rArr; maxeye_write_periheral_key &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_key
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_get_authorize_key
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[3d6]"></a>mem_pwr_mgmt_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sram.o(i.mem_pwr_mgmt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mem_pwr_mgmt_init &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_sleep_state_set
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_work_state_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[18d]"></a>nvds_put</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, sdk_nvds_patch.o(i.nvds_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_hdr_checksum
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_item_same
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_put
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_sec_info_patch
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>

<P><STRONG><a name="[18b]"></a>pencil_c_disc_srvc_start</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, pencil_srv_c.o(i.pencil_c_disc_srvc_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pencil_c_disc_srvc_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_services_browse
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
</UL>

<P><STRONG><a name="[3e2]"></a>pencil_c_tx_data_send</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, pencil_srv_c.o(i.pencil_c_tx_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_pencil_sn
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rst_voltameter_cap
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_pencil_sn
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_pcba_test_result
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_battery_cap
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_to_sleep
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_shipmode
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_read_pressure_level
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_read_pressure_cali_result
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pressure_cali
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pcba_test_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_disable_preload
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_log
</UL>

<P><STRONG><a name="[3e0]"></a>pencil_c_tx_notify_set</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, pencil_srv_c.o(i.pencil_c_tx_notify_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pencil_c_tx_notify_set &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_process
</UL>

<P><STRONG><a name="[3e1]"></a>pencil_cli_cb</STRONG> (Thumb, 866 bytes, Stack size 40 bytes, maxeye_product_test.o(i.pencil_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = pencil_cli_cb &rArr; production_perssure_level_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_uart_rst_voltameter_rsp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_level_rsp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_cali_rsp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pcba_test_rsp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_disable_preload_rsp
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_batt_cap_rsp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_process
</UL>

<P><STRONG><a name="[22b]"></a>pencil_client_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, pencil_srv_c.o(i.pencil_client_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pencil_client_init &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_client_prf_add
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[1b3]"></a>pencil_disable_preload</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_disable_preload))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_disable_preload &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[3e3]"></a>pencil_log</STRONG> (Thumb, 52 bytes, Stack size 152 bytes, pencil_ble.o(i.pencil_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = pencil_log &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[3cf]"></a>pencil_msg_evt_handler_t</STRONG> (Thumb, 386 bytes, Stack size 40 bytes, maxeye_product_test.o(i.pencil_msg_evt_handler_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pencil_msg_evt_handler_t &rArr; production_enc_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mac_char_to_hex
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_a_contain_b
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_enc_rsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_rsp
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_cli_cb
</UL>

<P><STRONG><a name="[1a9]"></a>pencil_pcba_test_start</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_pcba_test_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_pcba_test_start &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b0]"></a>pencil_pressure_cali</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_pressure_cali))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_pressure_cali &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b1]"></a>pencil_read_pressure_cali_result</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_read_pressure_cali_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_read_pressure_cali_result &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b5]"></a>pencil_read_pressure_level</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_read_pressure_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_read_pressure_level &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b7]"></a>pencil_shipmode</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_shipmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_shipmode &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1ac]"></a>pencil_to_sleep</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, pencil_ble.o(i.pencil_to_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pencil_to_sleep &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[3e5]"></a>platform_clock_init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, platform_clock.o(i.platform_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272<LI>Call Chain = platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clk_mgmt_init
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_xo_offset_init
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_ble_rtc_clk
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3ea]"></a>platform_disable_sleep_timer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, platform_clock.o(i.platform_disable_sleep_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_disable_sleep_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[3ed]"></a>platform_flash_enable_quad</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_exflash.o(i.platform_flash_enable_quad))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = platform_flash_enable_quad &rArr; platform_exflash_enable_quad &rArr; enable_quad &rArr; enable_quad_normal &rArr; enable_quad_mode0 &rArr; enable_quad_stat
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_exflash_enable_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[3ef]"></a>platform_flash_protection</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, platform_exflash.o(i.platform_flash_protection))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_flash_protection &rArr; hal_exflash_operation_protection
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_operation_protection
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[3f1]"></a>platform_init</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, platform_gr55xx.o(i.platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304<LI>Call Chain = platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_setup
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_set_exflash_readid_delay
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_calibration_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;svc_table_register
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_rtc_crystal_delay
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_push
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init_pop
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_register_patch_init_func
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_set
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_wakeup_osc_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_platform_init
</UL>

<P><STRONG><a name="[400]"></a>platform_init_pop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_pop))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3f5]"></a>platform_init_push</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, platform_sdk.o(i.platform_init_push))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[401]"></a>platform_param_adjust</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, platform_sdk.o(i.platform_param_adjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = platform_param_adjust
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[3f9]"></a>platform_sdk_init</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, platform_sdk.o(i.platform_sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216<LI>Call Chain = platform_sdk_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_init
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_recalibration_handler_register
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_init
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_init
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_param_adjust
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_priority_init
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_low_power_set
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3f6]"></a>platform_set_rtc_crystal_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, platform_clock.o(i.platform_set_rtc_crystal_delay))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[e2]"></a>pmu_calibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, pmu_calibration.o(i.pmu_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = pmu_calibration &rArr; pmu_calibration_handler &rArr; vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pmu_calibration.o(i.system_pmu_calibration_init)
</UL>
<P><STRONG><a name="[3fd]"></a>pmu_calibration_handler</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, platform_sdk.o(i.pmu_calibration_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = pmu_calibration_handler &rArr; vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_recalibration_flag
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_lp_clk
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_from_adc
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_calibration_set
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_adc_is_using
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration
</UL>

<P><STRONG><a name="[1af]"></a>production_batt_cap_rsp</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, maxeye_uart.o(i.production_batt_cap_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = production_batt_cap_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b4]"></a>production_disable_preload_rsp</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_disable_preload_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_disable_preload_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[3e4]"></a>production_enc_rsp</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, maxeye_uart.o(i.production_enc_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = production_enc_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_handler
</UL>

<P><STRONG><a name="[40e]"></a>production_mac_rsp</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, maxeye_uart.o(i.production_mac_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = production_mac_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[1ab]"></a>production_pcba_test_rsp</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, maxeye_uart.o(i.production_pcba_test_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = production_pcba_test_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[40f]"></a>production_pencil_rssi_rsp</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_pencil_rssi_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_pencil_rssi_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[410]"></a>production_pencil_set_mac_rsp</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_pencil_set_mac_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_pencil_set_mac_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[1b8]"></a>production_pencil_shipmode_rsp</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_pencil_shipmode_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_pencil_shipmode_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1ad]"></a>production_pencil_sleep_rsp</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_pencil_sleep_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_pencil_sleep_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b2]"></a>production_perssure_cali_rsp</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, maxeye_uart.o(i.production_perssure_cali_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = production_perssure_cali_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1b6]"></a>production_perssure_level_rsp</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, maxeye_uart.o(i.production_perssure_level_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = production_perssure_level_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1a5]"></a>production_read_sn_rsp</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_read_sn_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_read_sn_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[411]"></a>production_test_cli_ack</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, maxeye_uart.o(i.production_test_cli_ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = production_test_cli_ack &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[412]"></a>production_test_cli_cb</STRONG> (Thumb, 1984 bytes, Stack size 200 bytes, maxeye_uart.o(i.production_test_cli_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = production_test_cli_cb &rArr; app_connect_by_mac &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qfy_maxeye_time1s_event_start
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;second_boot_event_start
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_log
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_start
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_start
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_err
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_ack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_set_mac_rsp
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_rssi_rsp
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_mac_rsp
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hbyte_to_Lbyte
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_evt_handler
</UL>

<P><STRONG><a name="[416]"></a>production_test_cli_err</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, maxeye_uart.o(i.production_test_cli_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = production_test_cli_err &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[c3]"></a>production_test_evt_handler</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, maxeye_uart.o(i.production_test_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = production_test_evt_handler &rArr; production_test_cli_cb &rArr; app_connect_by_mac &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_uart.o(i.production_test_init)
</UL>
<P><STRONG><a name="[3b5]"></a>production_test_init</STRONG> (Thumb, 88 bytes, Stack size 96 bytes, maxeye_uart.o(i.production_test_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = production_test_init &rArr; app_uart_init &rArr; app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3b6]"></a>production_test_receive_open</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, maxeye_uart.o(i.production_test_receive_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = production_test_receive_open &rArr; app_uart_receive_async
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_receive_async
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1ba]"></a>production_uart_rst_voltameter_rsp</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_uart_rst_voltameter_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_uart_rst_voltameter_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1a8]"></a>production_write_sn_rsp</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, maxeye_uart.o(i.production_write_sn_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = production_write_sn_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_uart_send
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[c6]"></a>pwr_enter_sleep_check</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app_pwr_mgmt.o(i.pwr_enter_sleep_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_enter_sleep_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwr_mgmt.o(i.pwr_register_sleep_cb)
</UL>
<P><STRONG><a name="[265]"></a>pwr_mgmt_shutdown_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[3bb]"></a>pwr_mgmt_warm_boot</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.pwr_mgmt_warm_boot))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwr_mgmt_warm_boot &rArr; warm_boot &rArr; hal_flash_init
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_first
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_init
</UL>

<P><STRONG><a name="[168]"></a>pwr_register_sleep_cb</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, app_pwr_mgmt.o(i.pwr_register_sleep_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pwr_register_sleep_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_callback
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_init
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gpiote_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_systick_init
</UL>

<P><STRONG><a name="[3b8]"></a>qfy_maxeye_time1s_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_uart.o(i.qfy_maxeye_time1s_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = qfy_maxeye_time1s_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[166]"></a>qfy_maxeye_time1s_event_start</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, maxeye_uart.o(i.qfy_maxeye_time1s_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = qfy_maxeye_time1s_event_start &rArr; app_timer_stop &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[23f]"></a>rand_seed_gen</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_sdk_patch.o(i.rand_seed_gen))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rand_seed_gen &rArr; rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdk_srand
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl1_srand (via Veneer)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_rand_get
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_clk_enable_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_init_patch
</UL>

<P><STRONG><a name="[274]"></a>read_adc_value</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, platform_adc.o(i.read_adc_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_calibration_init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_renew_vco_base
</UL>

<P><STRONG><a name="[1ae]"></a>read_battery_cap</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.read_battery_cap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = read_battery_cap &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1aa]"></a>read_pcba_test_result</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.read_pcba_test_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = read_pcba_test_result &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[1a6]"></a>read_pencil_sn</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.read_pencil_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = read_pencil_sn &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[236]"></a>reg_gapm_hci_evt_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_task_patch.o(i.reg_gapm_hci_evt_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[235]"></a>reg_hci_cmd_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, llm_hci_patch.o(i.reg_hci_cmd_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[234]"></a>reg_msg_patch_tab</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ke_task_patch.o(i.reg_msg_patch_tab))
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_env_init
</UL>

<P><STRONG><a name="[421]"></a>retention_mem_set</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, platform_sdk.o(i.retention_mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = retention_mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temperature_calibrations
</UL>

<P><STRONG><a name="[288]"></a>rf_SX_disable</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_SX_disable))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[285]"></a>rf_SX_enable_and_reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_SX_enable_and_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_SX_enable_and_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_reset
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[40a]"></a>rf_calibration_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, platform_sdk.o(i.rf_calibration_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_calibration_set
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_set_recalibration_flag
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[20d]"></a>rf_communication_core_init_patch</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_communication_core_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
</UL>

<P><STRONG><a name="[206]"></a>rf_gdx_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_gdx_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[425]"></a>rf_hp_gain_offset_cfg</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, rf_gdx_patch.o(i.rf_hp_gain_offset_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rf_hp_gain_offset_cfg &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_freq_table_init
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_rx_vcobias_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[42b]"></a>rf_modulation_accuracy_calibration_patch</STRONG> (Thumb, 238 bytes, Stack size 192 bytes, rf_gdx_patch.o(i.rf_modulation_accuracy_calibration_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = rf_modulation_accuracy_calibration_patch &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_Tune
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;round
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_enable_and_reset
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_SX_disable
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_F_value_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_patch
</UL>

<P><STRONG><a name="[428]"></a>rf_rx_vcobias_reset</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, rf_gdx_patch.o(i.rf_rx_vcobias_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_rx_vcobias_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
</UL>

<P><STRONG><a name="[1d8]"></a>ring_buffer_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ring_buffer.o(i.ring_buffer_init))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[1d2]"></a>ring_buffer_items_count_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ring_buffer.o(i.ring_buffer_items_count_get))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[1d5]"></a>ring_buffer_read</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ring_buffer.o(i.ring_buffer_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_flush
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>

<P><STRONG><a name="[1e0]"></a>ring_buffer_write</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ring_buffer.o(i.ring_buffer_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ring_buffer_write
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
</UL>

<P><STRONG><a name="[3ff]"></a>rng_calibration</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, system_sdk_patch.o(i.rng_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rng_calibration &rArr; __aeabi_ul2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_wdt_get_counter
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration
</UL>

<P><STRONG><a name="[41f]"></a>rng_clk_enable_ex</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ble_sdk_patch.o(i.rng_clk_enable_ex))
<BR><BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[41c]"></a>rng_rand_get</STRONG> (Thumb, 86 bytes, Stack size 64 bytes, ble_sdk_patch.o(i.rng_rand_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rng_rand_get &rArr; hal_rng_generate_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_init_ext
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_generate_random_number
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_rng_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand_seed_gen
</UL>

<P><STRONG><a name="[268]"></a>rom_callback_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rom_callback_replace))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[287]"></a>round</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, round.o(i.round))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[1b9]"></a>rst_voltameter_cap</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, pencil_ble.o(i.rst_voltameter_cap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = rst_voltameter_cap &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[3fe]"></a>rtc_calibration</STRONG> (Thumb, 494 bytes, Stack size 48 bytes, system_sdk_patch.o(i.rtc_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rtc_calibration &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_set_clock_div
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_reload_counter
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_clear_flag_alarm
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1f9]"></a>rwble_abort_recovery</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, sch_prog_patch.o(i.rwble_abort_recovery))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
</UL>

<P><STRONG><a name="[205]"></a>rwble_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rwble_patch.o(i.rwble_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[1fa]"></a>rwble_reset_recovery</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, sch_prog_patch.o(i.rwble_reset_recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rwble_reset_recovery &rArr; sch_prog_recovery_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sw_int_req
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_rx_desc_rx_done_clean
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_prog_recovery_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bb_watch_timer_cbk_patch
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_patch
</UL>

<P><STRONG><a name="[203]"></a>rwip_sleep_func_replace</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rwip_sleep_patch.o(i.rwip_sleep_func_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[264]"></a>rwip_sleep_without_stack_init_replace</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rwip_sleep_common.o(i.rwip_sleep_without_stack_init_replace))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwip_sleep_without_stack_init_replace &rArr; ble_core_init_without_stack_init &rArr; ble_communication_core_init &rArr; rf_communication_core_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_init_without_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[204]"></a>sch_arb_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sch_arb_patch.o(i.sch_arb_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[209]"></a>sch_prog_frm_cbk_replace</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sch_prog_patch.o(i.sch_prog_frm_cbk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[43e]"></a>sch_prog_recovery_patch</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, sch_prog_patch.o(i.sch_prog_recovery_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sch_prog_recovery_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset_recovery
</UL>

<P><STRONG><a name="[13b]"></a>sdk_init</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, sdk_ram_init_patch.o(i.sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sdk_init
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[216]"></a>sdk_prf_msg_handler_tab_replace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[23c]"></a>sec_check_conn_bond_patch</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ble_sdk_sec_patch.o(i.sec_check_conn_bond_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_gatts_svc_changed_cfg_ind_handler_patch
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler_patch
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[20]"></a>sec_rcv_encrypt_req_ind_handler_patch</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, ble_sdk_sec_patch.o(i.sec_rcv_encrypt_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = sec_rcv_encrypt_req_ind_handler_patch &rArr; find_ltk_again &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_send
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ke_msg_alloc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gapc_auth_get
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_ltk_again
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>sec_rcv_sec_req_ind_handler_patch</STRONG> (Thumb, 200 bytes, Stack size 72 bytes, ble_sdk_sec_patch.o(i.sec_rcv_sec_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sec_rcv_sec_req_ind_handler_patch &rArr; sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_bond_info_miss_check
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_send_pair_req
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_enc_link
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> platform_gr55xx.o(.data)
</UL>
<P><STRONG><a name="[3b7]"></a>second_boot_event_register</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, maxeye_product_test.o(i.second_boot_event_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = second_boot_event_register &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[417]"></a>second_boot_event_start</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, maxeye_product_test.o(i.second_boot_event_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = second_boot_event_start &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_test_cli_cb
</UL>

<P><STRONG><a name="[74]"></a>set_msp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_gr55xx.o(i.set_msp))
<BR>[Address Reference Count : 1]<UL><LI> startup_gr55xx.o(.text)
</UL>
<P><STRONG><a name="[284]"></a>set_sx_frequence</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.set_sx_frequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_sx_frequence
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[446]"></a>setup_listenerOnce</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, listener_once.o(i.setup_listenerOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setup_listenerOnce
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_mBLE_eniroment
</UL>

<P><STRONG><a name="[3b1]"></a>setup_mBLE_eniroment</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mble_eniroment.o(i.setup_mBLE_eniroment))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setup_mBLE_eniroment &rArr; setup_listenerOnce
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_listenerOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[e0]"></a>smpc_handle_enc_change_evt_func_patch</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, smpc_patch.o(i.smpc_handle_enc_change_evt_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpc_handle_enc_change_evt_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_start
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_start
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt (via Veneer)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_link_encrypted (via Veneer)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task (via Veneer)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace)
</UL>
<P><STRONG><a name="[217]"></a>smpc_handle_enc_change_evt_func_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_patch.o(i.smpc_handle_enc_change_evt_func_replace))
<BR><BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_con_env_init
</UL>

<P><STRONG><a name="[352]"></a>st7735_delay</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, st7735_config.o(i.st7735_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = st7735_delay &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[350]"></a>st7735_init</STRONG> (Thumb, 170 bytes, Stack size 104 bytes, st7735_config.o(i.st7735_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = st7735_init &rArr; app_spi_init &rArr; app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[355]"></a>st7735_write_buffer</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, st7735_config.o(i.st7735_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = st7735_write_buffer &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_refresh
</UL>

<P><STRONG><a name="[351]"></a>st7735_write_cmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, st7735_config.o(i.st7735_write_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = st7735_write_cmd &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_window
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[353]"></a>st7735_write_data</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, st7735_config.o(i.st7735_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = st7735_write_data &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_transmit_async
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_window
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_init
</UL>

<P><STRONG><a name="[409]"></a>sys_adc_trim_get</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, system_sdk_patch.o(i.sys_adc_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_adc_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[283]"></a>sys_device_lp_gain_offset_2m_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_lp_gain_offset_2m_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_lp_gain_offset_2m_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[426]"></a>sys_device_package_get</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_package_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_ext_flash
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
</UL>

<P><STRONG><a name="[450]"></a>sys_device_sram_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_device_sram_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sram_size
</UL>

<P><STRONG><a name="[2a3]"></a>sys_device_uid_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, system_sdk_patch.o(i.sys_device_uid_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_device_uid_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[44f]"></a>sys_efuse_info_sync</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_efuse_info_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init_ext
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit_ext
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_trim_sum_get
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_efuse_io_ldo
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_sram_get
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_lp_gain_offset_2m_get
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_adc_trim_get
</UL>

<P><STRONG><a name="[341]"></a>sys_get_efuse_io_ldo</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, system_sdk_patch.o(i.sys_get_efuse_io_ldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_read
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_init
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_efuse_deinit
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>

<P><STRONG><a name="[359]"></a>sys_is_use_ext_flash</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_ext_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_ext_flash &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[358]"></a>sys_is_use_internal_3p3_ioldo</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, platform_sdk.o(i.sys_is_use_internal_3p3_ioldo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_package_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[357]"></a>sys_pmu_trim_get</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_pmu_trim_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_pmu_trim_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
</UL>

<P><STRONG><a name="[228]"></a>sys_sdk_verison_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, platform_sdk.o(i.sys_sdk_verison_get))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[2a4]"></a>sys_trim_sum_get</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_sdk_patch.o(i.sys_trim_sum_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sys_trim_sum_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_efuse_info_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[266]"></a>system_conf_correction</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cold_patch.o(i.system_conf_correction))
<BR><BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_cfg_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cold_patch_apply
</UL>

<P><STRONG><a name="[405]"></a>system_low_power_set</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, platform_sdk.o(i.system_low_power_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = system_low_power_set
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[132]"></a>system_platform_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, system_gr55xx.o(i.system_platform_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = system_platform_init &rArr; platform_init &rArr; platform_clock_init &rArr; platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_protection
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_flash_enable_quad
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3fa]"></a>system_pmu_calibration_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pmu_calibration.o(i.system_pmu_calibration_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = system_pmu_calibration_init &rArr; app_timer_delete &rArr; get_next_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3fb]"></a>system_pmu_deinit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, platform_sdk.o(i.system_pmu_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = system_pmu_deinit &rArr; system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[3fc]"></a>system_pmu_init</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, platform_sdk.o(i.system_pmu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = system_pmu_init &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i0nd_ioldo_3v_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_pmu_deinit
</UL>

<P><STRONG><a name="[403]"></a>system_priority_init</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, platform_sdk.o(i.system_priority_init))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_sdk_init
</UL>

<P><STRONG><a name="[207]"></a>system_sdk_replace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_sdk_patch.o(i.system_sdk_replace))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_common_env_init
</UL>

<P><STRONG><a name="[457]"></a>ton_value_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, platform_sdk.o(i.ton_value_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ton_value_set &rArr; get_ton_value_for_2p2uH
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_2p2uH
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ton_value_for_1p5uH
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[459]"></a>update_io_ldo_to_prevent_leakage</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, platform_sdk.o(i.update_io_ldo_to_prevent_leakage))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_pmu_trim_get
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_is_use_internal_3p3_ioldo
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_3p3_ioldo_update
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vbatt_calibrations
</UL>

<P><STRONG><a name="[40d]"></a>update_lp_clk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(i.update_lp_clk))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[3b2]"></a>user_device_wait_connect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, user_gui.o(i.user_device_wait_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = user_device_wait_connect &rArr; maxeye_put_gb2312_string &rArr; maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_gb2312_string
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_refresh_mem
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_color
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_refresh
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_key_int_callback
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3c3]"></a>user_device_write_enc_fail</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, user_gui.o(i.user_device_write_enc_fail))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = user_device_write_enc_fail &rArr; maxeye_put_gb2312_string &rArr; maxeye_put_one_gb2312 &rArr; gui_point_color
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_str8_16
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_put_gb2312_string
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_refresh_mem
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_color
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_refresh
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_mem
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_enc_verify
</UL>

<P><STRONG><a name="[192]"></a>user_gui_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_gui.o(i.user_gui_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = user_gui_init &rArr; gui_init &rArr; lcd_init &rArr; st7735_init &rArr; app_spi_init &rArr; app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_refresh_mem
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_set_color
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_refresh
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_fill_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_periph_init
</UL>

<P><STRONG><a name="[456]"></a>warm_boot_cfg_patch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, boot_patch.o(i.warm_boot_cfg_patch))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_conf_correction
</UL>

<P><STRONG><a name="[3f2]"></a>warm_boot_set_exflash_readid_delay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, warm_boot_patch.o(i.warm_boot_set_exflash_readid_delay))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[1a7]"></a>write_pencil_sn</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, pencil_ble.o(i.write_pencil_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = write_pencil_sn &rArr; pencil_c_tx_data_send &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_data_send
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_test_event_handler
</UL>

<P><STRONG><a name="[3d2]"></a>write_periheral_hash</STRONG> (Thumb, 88 bytes, Stack size 520 bytes, maxeye_enc.o(i.write_periheral_hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = write_periheral_hash &rArr; maxeye_c_tx_data_send &rArr; ble_gattc_prf_write_no_resp
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_data_send
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_xorcheck
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_hash
</UL>

<P><STRONG><a name="[4ea]"></a>ble_is_ready</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_sdk_patch.o(TINY_RAM_SPACE))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get (via Veneer)
</UL>

<P><STRONG><a name="[4eb]"></a>pwr_mgmt_ble_wakeup</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pwr_mgmt_ble_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLESLP_IRQHandler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLE_SDK_Handler_patch
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng2_lp_cali_state_get (via Veneer)
</UL>

<P><STRONG><a name="[505]"></a>pwr_mgmt_switch_dig_core_mode</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
</UL>

<P><STRONG><a name="[503]"></a>pwr_mgmt_check_ext_timer</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwr_mgmt_check_ext_timer &rArr; hal_pwr_get_timer_current_value
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_get_timer_current_value (via Veneer)
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpcycles_2_hus (via Veneer)
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_switch_dig_core_mode
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_remain_sleep_dur (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch
</UL>

<P><STRONG><a name="[50a]"></a>pwr_mgmt_ultra_sleep</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_us_2_lpcycles (via Veneer)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy (via Veneer)
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command (via Veneer)
</UL>

<P><STRONG><a name="[3ba]"></a>pwr_mgmt_schedule</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pwr_mgmt_schedule &rArr; mem_pwr_mgmt_check_processs &rArr; mem_pwr_mgmt_sleep_state_set &rArr; system_calculate_sram_size &rArr; get_sram_size &rArr; sys_device_sram_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_context_and_enter_sleep (via Veneer)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_unlocker (via Veneer)
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_save_ctx_lvl_two (via Veneer)
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_locker (via Veneer)
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_mode_get (via Veneer)
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_dev_suspend (via Veneer)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_pwr_mgmt_check_processs (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[22c]"></a>gap_params_init</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, user_app.o(i.gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = gap_params_init &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_scan_param_set
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_l2cap_params_set
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init_cmp_callback
</UL>

<P><STRONG><a name="[7f]"></a>maxeye_c_evt_process</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, user_app.o(i.maxeye_c_evt_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = maxeye_c_evt_process &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_cli_cb
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_tx_notify_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_app.o(i.ble_init_cmp_callback)
</UL>
<P><STRONG><a name="[150]"></a>maxeye_manufacturer_id_find</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, user_app.o(i.maxeye_manufacturer_id_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = maxeye_manufacturer_id_find &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
</UL>

<P><STRONG><a name="[157]"></a>oppo_oneplus_id_find</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, user_app.o(i.oppo_oneplus_id_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = oppo_oneplus_id_find &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
</UL>

<P><STRONG><a name="[156]"></a>oppo_pencil_id_find</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, user_app.o(i.oppo_pencil_id_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = oppo_pencil_id_find &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
</UL>

<P><STRONG><a name="[80]"></a>pencil_c_evt_process</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, user_app.o(i.pencil_c_evt_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = pencil_c_evt_process &rArr; pencil_cli_cb &rArr; production_perssure_level_rsp &rArr; maxeye_uart_send &rArr; app_log_raw_info &rArr; vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_cli_cb
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_tx_notify_set
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_app.o(i.ble_init_cmp_callback)
</UL>
<P><STRONG><a name="[e6]"></a>app_gap_adv_report_ind_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_gap_callback.o(i.app_gap_adv_report_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = app_gap_adv_report_ind_cb &rArr; app_adv_report_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>app_gap_connect_cb</STRONG> (Thumb, 84 bytes, Stack size 48 bytes, user_gap_callback.o(i.app_gap_connect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = app_gap_connect_cb &rArr; app_connected_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connected_handler
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_evt_put
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>app_gap_connection_update_cb</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_gap_callback.o(i.app_gap_connection_update_cb))
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>app_gap_connection_update_req_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_gap_callback.o(i.app_gap_connection_update_req_cb))
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_conn_param_update_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>app_gap_disconnect_cb</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, user_gap_callback.o(i.app_gap_disconnect_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = app_gap_disconnect_cb &rArr; app_disconnected_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnected_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>app_gap_scan_start_cb</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_gap_callback.o(i.app_gap_scan_start_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_gap_scan_start_cb &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>app_gap_scan_stop_cb</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, user_gap_callback.o(i.app_gap_scan_stop_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = app_gap_scan_stop_cb &rArr; app_scan_stop_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scan_stop_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gap_callback.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>app_gatt_mtu_exchange_cb</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, user_gatt_common_callback.o(i.app_gatt_mtu_exchange_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = app_gatt_mtu_exchange_cb &rArr; app_mtu_exchange_handler &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_mtu_exchange_handler
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_evt_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_gatt_common_callback.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>listenerOnce_add</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, listener_once.o(i.listenerOnce_add))
<BR>[Address Reference Count : 1]<UL><LI> listener_once.o(i.setup_listenerOnce)
</UL>
<P><STRONG><a name="[de]"></a>listenerOnce_getCount</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, listener_once.o(i.listenerOnce_getCount))
<BR>[Address Reference Count : 1]<UL><LI> listener_once.o(i.setup_listenerOnce)
</UL>
<P><STRONG><a name="[dc]"></a>listenerOnce_remove</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listener_once.o(i.listenerOnce_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = listenerOnce_remove
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listener_once.o(i.setup_listenerOnce)
</UL>
<P><STRONG><a name="[dd]"></a>listenerOnce_removeAll</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, listener_once.o(i.listenerOnce_removeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = listenerOnce_removeAll
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listener_once.o(i.setup_listenerOnce)
</UL>
<P><STRONG><a name="[df]"></a>listenerOnce_run</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, listener_once.o(i.listenerOnce_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = listenerOnce_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listener_once.o(i.setup_listenerOnce)
</UL>
<P><STRONG><a name="[2]"></a>maxeye_c_att_ntf_ind_cb</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, maxeye_srv_c.o(i.maxeye_c_att_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_c_att_ntf_ind_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_handler_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_srv_c.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>maxeye_c_att_write_cb</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, maxeye_srv_c.o(i.maxeye_c_att_write_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = maxeye_c_att_write_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_handler_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_srv_c.o(.data)
</UL>
<P><STRONG><a name="[3bd]"></a>maxeye_c_evt_handler_execute</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, maxeye_srv_c.o(i.maxeye_c_evt_handler_execute))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_srvc_browse_cb
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_att_write_cb
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_att_ntf_ind_cb
</UL>

<P><STRONG><a name="[3]"></a>maxeye_c_srvc_browse_cb</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, maxeye_srv_c.o(i.maxeye_c_srvc_browse_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxeye_c_srvc_browse_cb &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_c_evt_handler_execute
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_srv_c.o(.data)
</UL>
<P><STRONG><a name="[bd]"></a>maxeye_wdt_event_handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, maxeye_wdt.o(i.maxeye_wdt_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxeye_wdt_event_handler &rArr; maxeye_wdt_event_start &rArr; app_timer_start &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_wdt_event_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_wdt.o(i.maxeye_wdt_event_register)
</UL>
<P><STRONG><a name="[c7]"></a>maxeye_time1s_event_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, maxeye_uart.o(i.maxeye_time1s_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = maxeye_time1s_event_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_uart.o(i.qfy_maxeye_time1s_event_register)
</UL>
<P><STRONG><a name="[7e]"></a>app_test_event_handler</STRONG> (Thumb, 2052 bytes, Stack size 48 bytes, maxeye_product_test.o(i.app_test_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = app_test_event_handler &rArr; app_connect_by_mac &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_pencil_sn
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rst_voltameter_cap
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_pencil_sn
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_pcba_test_result
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_battery_cap
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_to_sleep
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_shipmode
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_read_pressure_level
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_read_pressure_cali_result
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pressure_cali
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_pcba_test_start
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_disable_preload
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_set
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_write_sn_rsp
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_uart_rst_voltameter_rsp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_read_sn_rsp
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_level_rsp
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_perssure_cali_rsp
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_sleep_rsp
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pencil_shipmode_rsp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_pcba_test_rsp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_disable_preload_rsp
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_batt_cap_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_product_test.o(i.app_test_event_register)
</UL>
<P><STRONG><a name="[346]"></a>is_a_contain_b</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, maxeye_product_test.o(i.is_a_contain_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = is_a_contain_b &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_msg_evt_handler_t
</UL>

<P><STRONG><a name="[da]"></a>second_boot_event_handler</STRONG> (Thumb, 806 bytes, Stack size 40 bytes, maxeye_product_test.o(i.second_boot_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = second_boot_event_handler &rArr; app_connect_by_mac &rArr; app_error_fault_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_disconnect
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connect_by_mac
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_write_enc_key
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_reset
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_write_periheral_hash
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_sign_hash
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_key
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_hash
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_read_periheral_chipid
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxeye_enc_verify
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_pin_set
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;production_enc_rsp
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;firmware_switch_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_product_test.o(i.second_boot_event_register)
</UL>
<P><STRONG><a name="[94]"></a>firmware_switch_event_handler</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, maxeye_gpio.o(i.firmware_switch_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = firmware_switch_event_handler &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_gpio_write_pin
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> maxeye_gpio.o(i.firmware_switch_pin_init)
</UL>
<P><STRONG><a name="[5]"></a>pencil_c_att_ntf_ind_cb</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, pencil_srv_c.o(i.pencil_c_att_ntf_ind_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pencil_c_att_ntf_ind_cb &rArr; pencil_c_evt_handler_execute &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_handler_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pencil_srv_c.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>pencil_c_att_write_cb</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, pencil_srv_c.o(i.pencil_c_att_write_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = pencil_c_att_write_cb &rArr; pencil_c_evt_handler_execute &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_handler_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pencil_srv_c.o(.data)
</UL>
<P><STRONG><a name="[3df]"></a>pencil_c_evt_handler_execute</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, pencil_srv_c.o(i.pencil_c_evt_handler_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pencil_c_evt_handler_execute &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_srvc_browse_cb
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_att_write_cb
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_att_ntf_ind_cb
</UL>

<P><STRONG><a name="[6]"></a>pencil_c_srvc_browse_cb</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, pencil_srv_c.o(i.pencil_c_srvc_browse_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = pencil_c_srvc_browse_cb &rArr; pencil_c_evt_handler_execute &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pencil_c_evt_handler_execute
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pencil_srv_c.o(.data)
</UL>
<P><STRONG><a name="[280]"></a>exflash_io_pull_config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, platform_gr55xx.o(i.exflash_io_pull_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = exflash_io_pull_config &rArr; ll_gpio_set_pin_pull
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[281]"></a>ll_gpio_set_pin_pull</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_gr55xx.o(i.ll_gpio_set_pin_pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_gpio_set_pin_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exflash_io_pull_config
</UL>

<P><STRONG><a name="[3db]"></a>nvds_setup</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, platform_gr55xx.o(i.nvds_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nvds_setup &rArr; hal_flash_erase &rArr; hal_exflash_erase &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_init
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get_start_addr
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_sector_size
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_init
</UL>

<P><STRONG><a name="[ee]"></a>dma_wake_up_ind</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_dma.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>dma_prepare_for_sleep</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_dma.o(i.dma_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_suspend_reg
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dma_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>dma_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_dma.o(i.dma_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_dma.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>gpiote_wake_up_ind</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_gpiote.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpiote_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>gpiote_prepare_for_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gpiote.o(i.gpiote_prepare_for_sleep))
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>gpiote_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_gpiote.o(i.gpiote_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_gpiote.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>uart_wake_up_ind</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_uart.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[1cb]"></a>app_uart_config_dma</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, app_uart.o(i.app_uart_config_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = app_uart_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_get_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[1cc]"></a>app_uart_event_call</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, app_uart.o(i.app_uart_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_uart_event_call &rArr; app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_start_transmit_async
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_tx_cplt_callback
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_rx_cplt_callback
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_error_callback
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_tx_cplt_callback
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_abort_rx_cplt_callback
</UL>

<P><STRONG><a name="[1cd]"></a>app_uart_start_transmit_async</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, app_uart.o(i.app_uart_start_transmit_async))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_uart_start_transmit_async &rArr; ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_items_count_get
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_it
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_transmit_dma
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_transmit_async
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_event_call
</UL>

<P><STRONG><a name="[1d7]"></a>uart_gpio_config</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, app_uart.o(i.uart_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = uart_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[f2]"></a>uart_prepare_for_sleep</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, app_uart.o(i.uart_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_suspend_reg
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_uart_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>uart_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_uart.o(i.uart_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_uart.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>systick_wake_up_ind</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_systick.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = systick_wake_up_ind &rArr; hal_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>systick_prepare_for_sleep</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_systick.o(i.systick_prepare_for_sleep))
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>systick_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_systick.o(i.systick_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_systick.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>spi_wake_up_ind</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_spi.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_wake_up_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_enable_irq
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_nvic_clear_pending_irq
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_resume_reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_spi.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>app_spi_config_dma</STRONG> (Thumb, 336 bytes, Stack size 120 bytes, app_spi.o(i.app_spi_config_dma))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = app_spi_config_dma &rArr; app_dma_init &rArr; hal_dma_init &rArr; ll_dma_init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_dma_get_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
</UL>

<P><STRONG><a name="[198]"></a>app_spi_event_call</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, app_spi.o(i.app_spi_event_call))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_spi_event_call &rArr; app_io_write_pin &rArr; hal_aon_gpio_write_pin &rArr; ll_aon_gpio_reset_output_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_tx_rx_cplt_callback
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_tx_cplt_callback
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_rx_cplt_callback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_error_callback
</UL>

<P><STRONG><a name="[19b]"></a>spi_gpio_config</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, app_spi.o(i.spi_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = spi_gpio_config &rArr; app_io_init &rArr; hal_aon_gpio_init &rArr; hal_aon_gpio_init_ext &rArr; ll_aon_gpio_init &rArr; ll_aon_gpio_set_pin_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_write_pin
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_spi_init
</UL>

<P><STRONG><a name="[f8]"></a>spi_prepare_for_sleep</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, app_spi.o(i.spi_prepare_for_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_prepare_for_sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_suspend_reg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_get_state
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_spi.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>spi_sleep_canceled</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_spi.o(i.spi_sleep_canceled))
<BR>[Address Reference Count : 1]<UL><LI> app_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1ca]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
</UL>

<P><STRONG><a name="[1be]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[1bf]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_sleep_timer_elapsed_callback
</UL>

<P><STRONG><a name="[1c3]"></a>app_timer_drv_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_timer.o(i.app_timer_drv_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_drv_stop &rArr; hal_pwr_config_timer_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_timer_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_delete
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop_and_ret
</UL>

<P><STRONG><a name="[15a]"></a>app_assert_info_output</STRONG> (Thumb, 114 bytes, Stack size 1048 bytes, app_assert.o(i.app_assert_info_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = app_assert_info_output &rArr; app_log_output &rArr; __2snprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_flush
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_warn_cb
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_param_cb
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_assert_err_cb
</UL>

<P><STRONG><a name="[180]"></a>__NVIC_GetPriority</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, app_log.o(i.__NVIC_GetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
</UL>

<P><STRONG><a name="[185]"></a>app_log_data_trans</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_log.o(i.app_log_data_trans))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_raw_info
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[181]"></a>app_log_is_fmt_set</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_log.o(i.app_log_is_fmt_set))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[182]"></a>app_log_strcpy</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, app_log.o(i.app_log_strcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = app_log_strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_log_output
</UL>

<P><STRONG><a name="[194]"></a>next_index_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_scheduler.o(i.next_index_get))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scheduler_evt_put
</UL>

<P><STRONG><a name="[188]"></a>app_mem_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_memory.o(i.app_mem_init))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_malloc
</UL>

<P><STRONG><a name="[189]"></a>free_block_node_insert</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, app_memory.o(i.free_block_node_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free_block_node_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_malloc
</UL>

<P><STRONG><a name="[354]"></a>lcd_set_window</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, st7735.o(i.lcd_set_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lcd_set_window &rArr; st7735_write_data &rArr; app_spi_transmit_async &rArr; hal_spi_transmit_it &rArr; spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_data
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st7735_write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_refresh
</UL>

<P><STRONG><a name="[e1]"></a>app_spi_callback</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, st7735_config.o(i.app_spi_callback))
<BR>[Address Reference Count : 1]<UL><LI> st7735_config.o(i.st7735_init)
</UL>
<P><STRONG><a name="[3af]"></a>find_new_hci_cmd_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llm_hci_patch.o(i.find_new_hci_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_hci_cmd_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_hci_command_handler_patch
</UL>

<P><STRONG><a name="[317]"></a>llm_is_wl_accessible_patch</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, llm_hci_patch.o(i.llm_is_wl_accessible_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = llm_is_wl_accessible_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rmv_dev_from_wlst_cmd_handler_patch
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_clear_wlst_cmd_handler_patch
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_add_dev_to_wlst_cmd_handler_patch
</UL>

<P><STRONG><a name="[a2]"></a>llc_pref_param_compute_func_patch</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, llc_con_upd_patch.o(i.llc_pref_param_compute_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = llc_pref_param_compute_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_chk
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_plan_req
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_offset_get
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_activity_offset_compute
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pref_period
</UL>
<BR>[Address Reference Count : 1]<UL><LI> llc_con_upd_patch.o(i.llc_con_upd_replace)
</UL>
<P><STRONG><a name="[36b]"></a>llc_llcp_rsp_to</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, llc_task_patch.o(i.llc_llcp_rsp_to))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = llc_llcp_rsp_to
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_disconnect
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_env_is_free
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_llcp_rsp_to_handler_patch
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_loc_llcp_rsp_to_handler_patch
</UL>

<P><STRONG><a name="[339]"></a>get_id_by_conn_idx</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, l2cc_task_patch.o(i.get_id_by_conn_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_id_by_conn_idx
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler_patch
</UL>

<P><STRONG><a name="[31f]"></a>init_hci_le_cmd_cmp_evt_starting_handler_patch</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gapm_init_patch.o(i.init_hci_le_cmd_cmp_evt_starting_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_hci_le_cmd_cmp_evt_starting_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stopped (via Veneer)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler_patch
</UL>

<P><STRONG><a name="[2be]"></a>find_new_gapm_hci_evt_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_task_patch.o(i.find_new_gapm_hci_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = find_new_gapm_hci_evt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_hci_handler_patch
</UL>

<P><STRONG><a name="[2e9]"></a>ll_aon_gpio_reset_output_pin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gr55xx_hal_aon_gpio_patch.o(i.ll_aon_gpio_reset_output_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_reset_output_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_deinit_ext
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_aon_gpio_write_pin
</UL>

<P><STRONG><a name="[25c]"></a>calendar_cover_seconds2time</STRONG> (Thumb, 254 bytes, Stack size 80 bytes, gr55xx_hal_calendar_patch.o(i.calendar_cover_seconds2time))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = calendar_cover_seconds2time
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
</UL>

<P><STRONG><a name="[2f5]"></a>calendar_cover_time2seconds</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gr55xx_hal_calendar_patch.o(i.calendar_cover_time2seconds))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calendar_cover_time2seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
</UL>

<P><STRONG><a name="[25d]"></a>calendar_get_timer_value</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gr55xx_hal_calendar_patch.o(i.calendar_get_timer_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calendar_get_timer_value
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_calendar_get_counter
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
</UL>

<P><STRONG><a name="[2fb]"></a>ll_calendar_get_alarm</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
</UL>

<P><STRONG><a name="[25e]"></a>ll_calendar_get_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_ext
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_get_timer_value
</UL>

<P><STRONG><a name="[2f4]"></a>ll_calendar_get_wrapcnt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_get_wrapcnt))
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_time
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_get_time
</UL>

<P><STRONG><a name="[2fa]"></a>ll_calendar_reload_alarm</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_reload_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_set_alarm
</UL>

<P><STRONG><a name="[2f8]"></a>ll_calendar_set_clock_div</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gr55xx_hal_calendar_patch.o(i.ll_calendar_set_clock_div))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_calendar_init_ext
</UL>

<P><STRONG><a name="[46f]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gr55xx_hal_pwr_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_disable_ext_wakeup
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_config_ext_wakeup
</UL>

<P><STRONG><a name="[474]"></a>xqspi_receive_patch</STRONG> (Thumb, 260 bytes, Stack size 48 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_patch
</UL>

<P><STRONG><a name="[475]"></a>ll_xqspi_set_qspi_datasize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_align_word
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_receive_patch
</UL>

<P><STRONG><a name="[479]"></a>xqspi_receive_align_word</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gr55xx_hal_xqspi_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xqspi_wait_flag_state_until_retry
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_set_qspi_datasize
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_xqspi_command_receive_align_word
</UL>

<P><STRONG><a name="[313]"></a>spi_config</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, gr55xx_hal_spi_patch.o(i.spi_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_config
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit_it
</UL>

<P><STRONG><a name="[312]"></a>spi_wait_flag_state_until_timeout</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, gr55xx_hal_spi_patch.o(i.spi_wait_flag_state_until_timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_wait_flag_state_until_timeout
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreUpdateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_spi_transmit_it
</UL>

<P><STRONG><a name="[2b2]"></a>hci_le_ltk_request_evt_handler_patch</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gapc_hci_patch.o(i.hci_le_ltk_request_evt_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hci_le_ltk_request_evt_handler_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conidx (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_hci_handler_patch
</UL>

<P><STRONG><a name="[e3]"></a>BLE_SDK_Handler_patch</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, system_sdk_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BLE_SDK_Handler_patch &rArr; pwr_mgmt_ble_wakeup
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state (via Veneer)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state (via Veneer)
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sdk_schedule (via Veneer)
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_is_ready
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ble_wakeup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_sdk_patch.o(i.system_sdk_replace)
</UL>
<P><STRONG><a name="[437]"></a>ll_aon_wdt_get_counter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_aon_wdt_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rng_calibration
</UL>

<P><STRONG><a name="[43c]"></a>ll_calendar_clear_flag_alarm</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_clear_flag_alarm))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[43a]"></a>ll_calendar_get_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_get_counter))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[43b]"></a>ll_calendar_reload_counter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_reload_counter))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[439]"></a>ll_calendar_set_clock_div</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_sdk_patch.o(i.ll_calendar_set_clock_div))
<BR><BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_calibration
</UL>

<P><STRONG><a name="[28b]"></a>find_ltk_again</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ble_sdk_sec_patch.o(i.find_ltk_again))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = find_ltk_again &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_encrypt_req_ind_handler_patch
</UL>

<P><STRONG><a name="[440]"></a>sec_bond_info_miss_check</STRONG> (Thumb, 70 bytes, Stack size 192 bytes, ble_sdk_sec_patch.o(i.sec_bond_info_miss_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sec_bond_info_miss_check
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_rcv_sec_req_ind_handler_patch
</UL>

<P><STRONG><a name="[1e6]"></a>attm_update_max_len</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ble_sdk_gapm_patch.o(i.attm_update_max_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attm_update_max_len
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler_patch
</UL>

<P><STRONG><a name="[85]"></a>gap_device_config_params_init_patch</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, ble_sdk_gapm_patch.o(i.gap_device_config_params_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = gap_device_config_params_init_patch &rArr; init_ltk_list
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_build_rand16
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nvds_get
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ltk_list
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_trim_sum_get
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_device_uid_get
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
</UL>
<P><STRONG><a name="[86]"></a>gap_init_fsm_next_func_patch</STRONG> (Thumb, 448 bytes, Stack size 48 bytes, ble_sdk_gapm_patch.o(i.gap_init_fsm_next_func_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gap_init_fsm_next_func_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_hdl
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_initiating
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_initiating
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_delete_initiating
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_create_initiating
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_activity_opera_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_gapm_patch.o(i.ble_sdk_gapm_replace)
</UL>
<P><STRONG><a name="[2a6]"></a>init_ltk_list</STRONG> (Thumb, 206 bytes, Stack size 264 bytes, ble_sdk_gapm_patch.o(i.init_ltk_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = init_ltk_list
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_bond_devs
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_get_sec_info
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_device_config_params_init_patch
</UL>

<P><STRONG><a name="[50d]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[509]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_shutdown_patch (via Veneer)
</UL>

<P><STRONG><a name="[50c]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sdk_pwr_mgmt_patch.o(RAM_CODE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_ultra_sleep (via Veneer)
</UL>

<P><STRONG><a name="[c4]"></a>pwr_mgmt_shutdown_patch</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, sdk_pwr_mgmt_patch.o(TINY_RAM_SPACE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pwr_mgmt_shutdown_patch &rArr; hal_exflash_wakeup_patch &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_set_wakeup_flag (via Veneer)
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_pwr_enter_chip_deepsleep (via Veneer)
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set (via Veneer)
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_digldo_dcdc_set (via Veneer)
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_wakeup_patch (via Veneer)
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_exflash_deepsleep_patch (via Veneer)
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_on (via Veneer)
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_core_power_off (via Veneer)
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgmt_check_ext_timer
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_clear_ext_wakeup_status (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sdk_pwr_mgmt_patch.o(i.pwr_mgmt_shutdown_replace)
</UL>
<P><STRONG><a name="[1e2]"></a>append_item</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.append_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[1e4]"></a>compact_nvds</STRONG> (Thumb, 500 bytes, Stack size 64 bytes, sdk_nvds_patch.o(i.compact_nvds))
<BR><BR>[Stack]<UL><LI>Max Depth = 1088<LI>Call Chain = compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_clean
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cp_hdr_incr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[26b]"></a>cp_hdr_incr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.cp_hdr_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cp_hdr_incr
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[26a]"></a>dec_flash_read</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_incr
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[27b]"></a>dec_flash_write</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.dec_flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[289]"></a>find_item</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.find_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = find_item &rArr; tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_find
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[45e]"></a>gen_hdr_checksum</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.gen_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[45f]"></a>gen_value_checksum</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, sdk_nvds_patch.o(i.gen_value_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gen_value_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
</UL>

<P><STRONG><a name="[347]"></a>is_item_same</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.is_item_same))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = is_item_same &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[26c]"></a>read_incr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.read_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = read_incr &rArr; dec_flash_read &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[3da]"></a>replace_item</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, sdk_nvds_patch.o(i.replace_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_del
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_read
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[269]"></a>tags_cache_clean</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tags_cache_clean
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[45d]"></a>tags_cache_rec_add</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sdk_nvds_patch.o(i.tags_cache_rec_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_item
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[420]"></a>tags_cache_rec_del</STRONG> (Thumb, 302 bytes, Stack size 328 bytes, sdk_nvds_patch.o(i.tags_cache_rec_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = tags_cache_rec_del &rArr; hal_flash_read
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_set_security
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_read
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;replace_item
</UL>

<P><STRONG><a name="[28a]"></a>tags_cache_rec_find</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sdk_nvds_patch.o(i.tags_cache_rec_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tags_cache_rec_find
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_item
</UL>

<P><STRONG><a name="[3d9]"></a>verify_hdr_checksum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sdk_nvds_patch.o(i.verify_hdr_checksum))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
</UL>

<P><STRONG><a name="[26d]"></a>write_compacted_items</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, sdk_nvds_patch.o(i.write_compacted_items))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024<LI>Call Chain = write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_erase
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_incr
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compact_nvds
</UL>

<P><STRONG><a name="[45c]"></a>write_incr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sdk_nvds_patch.o(i.write_incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_compacted_items
</UL>

<P><STRONG><a name="[1e5]"></a>write_item</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, sdk_nvds_patch.o(i.write_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = write_item &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_align_bytes
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tags_cache_rec_add
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_value_checksum
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_hdr_checksum
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_flash_write
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_flash_write_r
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;append_item
</UL>

<P><STRONG><a name="[21f]"></a>sdk_gatt_check_conidx</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ble_sdk_gattc_patch.o(i.sdk_gatt_check_conidx))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_mtu_exchange
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write_no_resp
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_write
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_prf_services_browse
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gattc_indicate_cfm
</UL>

<P><STRONG><a name="[489]"></a>ll_pwr_get_ext_wakeup_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[488]"></a>ll_pwr_clear_ext_wakeup_status</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_sdk.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[276]"></a>cpll_renew_vco_base</STRONG> (Thumb, 416 bytes, Stack size 64 bytes, platform_sdk.o(i.cpll_renew_vco_base))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cpll_renew_vco_base &rArr; read_adc_value &rArr; hal_dwt_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreSetClock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreGetClock
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_adc_value
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpll_lock_check_recover
</UL>

<P><STRONG><a name="[2d9]"></a>get_ton_value_for_1p5uH</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, platform_sdk.o(i.get_ton_value_for_1p5uH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_ton_value_for_1p5uH
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[2da]"></a>get_ton_value_for_2p2uH</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, platform_sdk.o(i.get_ton_value_for_2p2uH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_ton_value_for_2p2uH
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
</UL>

<P><STRONG><a name="[48a]"></a>ll_aon_gpio_is_enabled_it</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, platform_sdk.o(i.ll_aon_gpio_is_enabled_it))
<BR><BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;warm_boot_second
</UL>

<P><STRONG><a name="[40b]"></a>temperature_calibrations</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, platform_sdk.o(i.temperature_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = temperature_calibrations &rArr; ldo_voltage_set &rArr; sys_is_use_internal_3p3_ioldo &rArr; sys_device_package_get &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retention_mem_set
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldo_voltage_set
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_shape_set
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_period_1V_set
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aon_voltage_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[40c]"></a>vbatt_calibrations</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, platform_sdk.o(i.vbatt_calibrations))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = vbatt_calibrations &rArr; update_io_ldo_to_prevent_leakage &rArr; internal_3p3_ioldo_update &rArr; i0nd_ioldo_3v_get &rArr; sys_get_efuse_io_ldo &rArr; sys_efuse_info_sync &rArr; hal_efuse_init_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_io_ldo_to_prevent_leakage
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ton_value_set
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_handler
</UL>

<P><STRONG><a name="[3ec]"></a>ll_pwr_req_excute_psc_command</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[3eb]"></a>ll_pwr_is_active_flag_psc_cmd_busy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, platform_clock.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_disable_sleep_timer
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_set_psc_clk
</UL>

<P><STRONG><a name="[3e8]"></a>platform_set_ble_rtc_clk</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, platform_clock.o(i.platform_set_ble_rtc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248<LI>Call Chain = platform_set_ble_rtc_clk &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_enable
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hal_dwt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[3e9]"></a>platform_set_psc_clk</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, platform_clock.o(i.platform_set_psc_clk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = platform_set_psc_clk
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_lpclk_set
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_is_active_flag_psc_cmd_busy
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_pwr_req_excute_psc_command
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[3e7]"></a>rf_xo_offset_init</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, platform_clock.o(i.rf_xo_offset_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232<LI>Call Chain = rf_xo_offset_init &rArr; nvds_put &rArr; replace_item &rArr; append_item &rArr; compact_nvds &rArr; write_compacted_items &rArr; write_incr &rArr; dec_flash_write &rArr; hal_flash_write_r &rArr; hal_exflash_write &rArr; hal_xqspi_init_ext &rArr; hal_xqspi_init_ext_patch &rArr; ll_xqspi_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_put
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvds_get
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;work_xo_bias_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[3e6]"></a>system_clk_mgmt_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, platform_clock.o(i.system_clk_mgmt_init))
<BR><BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_clock_init
</UL>

<P><STRONG><a name="[28d]"></a>llc_rem_encrypt_proc_finish</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, llc_encrypt_patch.o(i.llc_rem_encrypt_proc_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = llc_rem_encrypt_proc_finish
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_con_data_flow_set
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_unreg
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_timer_pause_set
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_proc_get
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_llcp_state_set
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_le_ping_restart
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_hci_enc_evt_send
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;finish_encryt_check_by_llcp
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_rem_encrypt_proc_continue_patch
</UL>

<P><STRONG><a name="[bb]"></a>lld_scan_evt_start_cbk_patch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_evt_start_cbk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_start_func_patch)
</UL>
<P><STRONG><a name="[4b2]"></a>lld_scan_process_pkt_rx_patch</STRONG> (Thumb, 2664 bytes, Stack size 80 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_sync_info_unpack
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_sync_accept
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_get_adv_data_len
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_calc_aux_rx
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
</UL>

<P><STRONG><a name="[4b8]"></a>lld_scan_frm_rx_isr_patch</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lld_scan_frm_rx_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[4b9]"></a>lld_scan_frm_eof_isr_patch</STRONG> (Thumb, 290 bytes, Stack size 48 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lld_scan_frm_eof_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sch_arb_remove
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_trunc_ind
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_end
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_free
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_process_pkt_rx_patch
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_cbk_func_patch
</UL>

<P><STRONG><a name="[b8]"></a>lld_scan_frm_cbk_func_patch</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, lld_scan_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lld_scan_frm_cbk_func_patch &rArr; lld_scan_frm_eof_isr_patch &rArr; lld_scan_process_pkt_rx_patch &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_skip_isr
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_eof_isr_patch
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_scan_frm_rx_isr_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lld_scan_patch.o(i.lld_scan_frm_cbk_replace)
</UL>
<P><STRONG><a name="[107]"></a>atts_read_mult_req_patch</STRONG> (Thumb, 376 bytes, Stack size 56 bytes, atts_patch.o(i.atts_read_mult_req_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = atts_read_mult_req_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_pdu (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache (via Veneer)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts_patch.o(.constdata)
</UL>
<P><STRONG><a name="[34e]"></a>get_conn_idx_by_id</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, l2cm_patch.o(i.get_conn_idx_by_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_conn_idx_by_id
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler_patch
</UL>

<P><STRONG><a name="[9e]"></a>l2cm_l2cap_tx_handler_patch</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, l2cm_patch.o(i.l2cm_l2cap_tx_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = l2cm_l2cap_tx_handler_patch &rArr; get_conn_idx_by_id
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_conn_idx_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cm_patch.o(i.l2cm_l2cap_tx_handler_replace)
</UL>
<P><STRONG><a name="[35a]"></a>ll_aon_gpio_set_pin_mode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gr55xx_ll_aon_gpio_patch.o(i.ll_aon_gpio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_aon_gpio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_aon_gpio_init
</UL>

<P><STRONG><a name="[365]"></a>ll_dma_is_empty_fifo</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_is_empty_fifo))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[363]"></a>ll_dma_is_enabled_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_is_enabled_channel))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[366]"></a>ll_dma_resume_channel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_resume_channel))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[364]"></a>ll_dma_suspend_channel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gr55xx_ll_dma_patch.o(i.ll_dma_suspend_channel))
<BR><BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_dma_init
</UL>

<P><STRONG><a name="[4d0]"></a>ll_xqspi_disable_cache</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gr55xx_ll_xqspi_patch.o(RAM_CODE))
<BR><BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_xqspi_init_patch
</UL>

<P><STRONG><a name="[367]"></a>ll_msio_set_pin_mode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gr55xx_ll_msio_patch.o(i.ll_msio_set_pin_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ll_msio_set_pin_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ll_msio_init
</UL>

<P><STRONG><a name="[c9]"></a>rf_wakeup_init_patch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rf_gdx_patch.o(RAM_CODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_wakeup_init_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_wakeup_init
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_timing_cfg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_perform_enhance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_gdx_replace)
</UL>
<P><STRONG><a name="[286]"></a>get_F_value_patch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.get_F_value_patch))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
</UL>

<P><STRONG><a name="[c8]"></a>rf_init_patch</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, rf_gdx_patch.o(i.rf_init_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = rf_init_patch &rArr; rf_modulation_accuracy_calibration_patch &rArr; round &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_trim_calibration
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_misc_init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_em_init
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_api_init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_agc_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_communication_core_init
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_modulation_accuracy_calibration_patch
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_hp_gain_offset_cfg
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ext_hp_gain_calibration
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_timing_cfg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_perform_enhance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_gdx_replace)
</UL>
<P><STRONG><a name="[434]"></a>rf_tx_pw_conv_tbl_get</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, rf_gdx_patch.o(i.rf_tx_pw_conv_tbl_get))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_dbm_get_patch
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_txpwr_cs_get_patch
</UL>

<P><STRONG><a name="[cb]"></a>rf_txpwr_cs_get_patch</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rf_gdx_patch.o(i.rf_txpwr_cs_get_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rf_txpwr_cs_get_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_mode_get
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_mat_cir_get
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_pw_conv_tbl_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_init_patch)
</UL>
<P><STRONG><a name="[ca]"></a>rf_txpwr_dbm_get_patch</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, rf_gdx_patch.o(i.rf_txpwr_dbm_get_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rf_txpwr_dbm_get_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_mode_get
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_mat_cir_get
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_tx_pw_conv_tbl_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rf_gdx_patch.o(i.rf_init_patch)
</UL>
<P><STRONG><a name="[2cf]"></a>gatt_remove_item_patch</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ble_sdk_gatts_patch.o(i.gatt_remove_item_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gatt_remove_item_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_connection_func_patch
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_on_disconnection_func_patch
</UL>

<P><STRONG><a name="[295]"></a>get_ori_cmd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, platform_patch.o(i.get_ori_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[296]"></a>get_svc_cmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, platform_patch.o(i.get_svc_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fun_replace_by_svc
</UL>

<P><STRONG><a name="[147]"></a>ll_adc_disable_clock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, platform_adc.o(i.ll_adc_disable_clock))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_conversion
</UL>

<P><STRONG><a name="[396]"></a>lld_try_to_free_old_buffer</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lld_adv_patch.o(i.lld_try_to_free_old_buffer))
<BR><BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_adv_tx_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_adv_frm_isr_patch
</UL>

<P><STRONG><a name="[93]"></a>get_info</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dfu_cmd_handler_patch.o(i.get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_send_frame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dfu_cmd_handler_patch.o(i.dfu_cmd_handler_replace)
</UL>
<P><STRONG><a name="[d9]"></a>gattc_write_req_ind_handler_patch</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, ble_sdk_prf_patch.o(i.gattc_write_req_ind_handler_patch))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_write_req_ind_handler_patch &rArr; sec_check_conn_bond_patch
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_save_state
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fpb_load_state
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_log_printf (via Veneer)
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_check_conn_bond_patch
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_prf_cb_by_task_id
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_prf_get_id_from_task
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_uuid16_comp
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_attmdb_get_attribute
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_get_bond_dev_addr
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_bond_cccd
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bm_set_gatt_info
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_find_item_patch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_sdk_prf_patch.o(i.sdk_prf_msg_handler_tab_replace)
</UL>
<P><STRONG><a name="[141]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13d]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[144]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[143]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[78]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0vsnprintf)
<LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[79]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
